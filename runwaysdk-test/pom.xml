<!--

    Copyright (c) 2015 TerraFrame, Inc. All rights reserved.

    This file is part of Runway SDK(tm).

    Runway SDK(tm) is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    Runway SDK(tm) is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses />.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.runwaysdk</groupId>
    <artifactId>runwaysdk-root</artifactId>
    <version>2.0.33-SNAPSHOT</version>
  </parent>

  <artifactId>runwaysdk-test</artifactId>
  <packaging>jar</packaging>

  <name>runwaysdk-test</name>
  <url>${runway.url}</url>

  <properties>
    <root.db>postgres</root.db>
    <root.user>postgres</root.user>
    <root.pass>postgres</root.pass>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-catalina</artifactId>
      <version>8.0.23</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
    </dependency>
    <dependency>
      <groupId>com.runwaysdk</groupId>
      <artifactId>runwaysdk-client</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.runwaysdk</groupId>
      <artifactId>runwaysdk-server</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>2.22.0</version>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-server</artifactId>
      <version>2.28.0</version>
    </dependency>
    <dependency>
      <groupId>cactus</groupId>
      <artifactId>cactus</artifactId>
      <version>12-1.7.1</version>
    </dependency>
    <dependency>
      <groupId>ognl</groupId>
      <artifactId>ognl</artifactId>
      <version>3.0.8</version>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>unimport-working</id>
      <activation>
        <property>
          <name>unimport-working</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>unimport-working</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <mainClass>com.runwaysdk.dataaccess.io.UndoAll</mainClass>
                  <arguments>
                    <argument>${project.basedir}/src/main/domain</argument>
                    <argument />
                    <argument>false</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <!-- This tells maven to resolve variables in our properties files (like project.basedir) -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>**/*.keystore</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.keystore</include>
        </includes>
      </resource>
    </resources>

    <plugins>
      <!-- This plugin sets maven.compile.classpath. -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>build-classpath</goal>
            </goals>
            <configuration>
              <outputProperty>maven.compile.classpath</outputProperty>
              <pathSeparator>;</pathSeparator>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- This tells Maven to delete the java-gen when doing a clean. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.4.1</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>src/main/java-gen/client</directory>
              <includes>
                <include>**/*</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>src/main/java-gen/common</directory>
              <includes>
                <include>**/*</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>src/main/java-gen/server</directory>
              <includes>
                <include>**/*</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <!-- This plugin weaves aspects on build -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <version>${aspectj.plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
            <version>${aspectj.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <aspectLibraries>
            <aspectLibrary>
              <groupId>com.runwaysdk</groupId>
              <artifactId>runwaysdk-server</artifactId>
            </aspectLibrary>
            <aspectLibrary>
              <groupId>com.runwaysdk</groupId>
              <artifactId>runwaysdk-common</artifactId>
            </aspectLibrary>
          </aspectLibraries>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <complianceLevel>${maven.compiler.target}</complianceLevel>
          <fork>true</fork>
          <meminitial>512m</meminitial>
          <maxmem>1024m</maxmem>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.15</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit47</artifactId>
            <version>2.15</version>
          </dependency>
        </dependencies>
        <goals>
          <goal>test</goal>
        </goals>
        <configuration>
          <forkCount>0</forkCount> <!-- Forking consumes twice the memory on the CI box. -->
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>2.11</version>
        <configuration>
          <header>${basedir}/../LICENSE_HEADER</header>
          <excludes>
            <exclude>target/**</exclude>
            <exclude>m2-target/**</exclude>
            <exclude>**/*.properties</exclude>
            <exclude>**/*.launch</exclude>
            <exclude>**/*.vsd</exclude>
            <exclude>**/*.gitignore</exclude>
            <exclude>**/*.LESSER</exclude>
            <exclude>**/*.xls</exclude>
            <exclude>doc/**</exclude>
            <exclude>launches/**</exclude>
            <exclude>**/*.jar</exclude>
            <exclude>LICENSE_HEADER</exclude>
            <exclude>**/*.markdown</exclude>
            <exclude>COPYING</exclude>
            <exclude>logs/**</exclude>
            <exclude>**/*.png</exclude>
            <exclude>thirdparty/**</exclude>
            <exclude>**/yui2/**</exclude>
            <exclude>**/yui3/**</exclude>
            <exclude>.git/**</exclude>
            <exclude>**/ajcore*.txt</exclude>
            <exclude>**/.directory</exclude>
            <exclude>**/.keystore</exclude>
            <exclude>**/.keyStore</exclude>
          </excludes>
          <properties>
            <name>${project.name}</name>
            <year>${project.inceptionYear}</year>
            <holder>Terraframe</holder>
            <contact>terraframe.com</contact>
          </properties>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!-- Autogenerated, this tells M2E to ignore custom maven plugins that M2E doesn't know how to integrate into the Eclipse build. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-dependency-plugin
                    </artifactId>
                    <versionRange>[2.1,)</versionRange>
                    <goals>
                      <goal>copy-dependencies</goal>
                      <goal>build-classpath</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <versionRange>[1.2.1,)</versionRange>
                    <goals>
                      <goal>java</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
