package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = -1608331926)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdClassification.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MdClassificationBase extends com.runwaysdk.system.metadata.Metadata
{
  public final static String CLASS = "com.runwaysdk.system.metadata.MdClassification";
  public static java.lang.String DISPLAYLABEL = "displayLabel";
  private com.runwaysdk.business.Struct displayLabel = null;
  
  public static java.lang.String MDEDGE = "mdEdge";
  public static java.lang.String MDVERTEX = "mdVertex";
  public static java.lang.String PACKAGENAME = "packageName";
  public static java.lang.String ROOT = "root";
  public static java.lang.String TYPENAME = "typeName";
  private static final long serialVersionUID = -1608331926;
  
  public MdClassificationBase()
  {
    super();
    displayLabel = super.getStruct("displayLabel");
  }
  
  public com.runwaysdk.system.metadata.MdClassificationDisplayLabel getDisplayLabel()
  {
    return (com.runwaysdk.system.metadata.MdClassificationDisplayLabel) displayLabel;
  }
  
  public void validateDisplayLabel()
  {
    this.validateAttribute(DISPLAYLABEL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeLocalCharacterDAOIF getDisplayLabelMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdClassification.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeLocalCharacterDAOIF)mdClassIF.definesAttribute(DISPLAYLABEL);
  }
  
  public com.runwaysdk.system.metadata.MdEdge getMdEdge()
  {
    if (getValue(MDEDGE).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdEdge.get(getValue(MDEDGE));
    }
  }
  
  public String getMdEdgeOid()
  {
    return getValue(MDEDGE);
  }
  
  public void validateMdEdge()
  {
    this.validateAttribute(MDEDGE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getMdEdgeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdClassification.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(MDEDGE);
  }
  
  public void setMdEdge(com.runwaysdk.system.metadata.MdEdge value)
  {
    if(value == null)
    {
      setValue(MDEDGE, "");
    }
    else
    {
      setValue(MDEDGE, value.getOid());
    }
  }
  
  public void setMdEdgeId(java.lang.String oid)
  {
    if(oid == null)
    {
      setValue(MDEDGE, "");
    }
    else
    {
      setValue(MDEDGE, oid);
    }
  }
  
  public com.runwaysdk.system.metadata.MdVertex getMdVertex()
  {
    if (getValue(MDVERTEX).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdVertex.get(getValue(MDVERTEX));
    }
  }
  
  public String getMdVertexOid()
  {
    return getValue(MDVERTEX);
  }
  
  public void validateMdVertex()
  {
    this.validateAttribute(MDVERTEX);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getMdVertexMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdClassification.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(MDVERTEX);
  }
  
  public void setMdVertex(com.runwaysdk.system.metadata.MdVertex value)
  {
    if(value == null)
    {
      setValue(MDVERTEX, "");
    }
    else
    {
      setValue(MDVERTEX, value.getOid());
    }
  }
  
  public void setMdVertexId(java.lang.String oid)
  {
    if(oid == null)
    {
      setValue(MDVERTEX, "");
    }
    else
    {
      setValue(MDVERTEX, oid);
    }
  }
  
  public String getPackageName()
  {
    return getValue(PACKAGENAME);
  }
  
  public void validatePackageName()
  {
    this.validateAttribute(PACKAGENAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getPackageNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdClassification.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(PACKAGENAME);
  }
  
  public void setPackageName(String value)
  {
    if(value == null)
    {
      setValue(PACKAGENAME, "");
    }
    else
    {
      setValue(PACKAGENAME, value);
    }
  }
  
  public com.runwaysdk.system.AbstractClassification getRoot()
  {
    return (com.runwaysdk.system.AbstractClassification)com.runwaysdk.dataaccess.graph.VertexObjectDAO.get(com.runwaysdk.dataaccess.metadata.graph.MdVertexDAO.getMdVertexDAO("com.runwaysdk.system.AbstractClassification"), getValue(ROOT));
  }
  
  public void validateRoot()
  {
    this.validateAttribute(ROOT);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeGraphReferenceDAOIF getRootMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdClassification.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeGraphReferenceDAOIF)mdClassIF.definesAttribute(ROOT);
  }
  
  public void setRoot(com.runwaysdk.system.AbstractClassification value)
  {
    if(value == null)
    {
      setValue(ROOT, "");
    }
    else
    {
      setValue(ROOT, value.getOid());
    }
  }
  
  public String getTypeName()
  {
    return getValue(TYPENAME);
  }
  
  public void validateTypeName()
  {
    this.validateAttribute(TYPENAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getTypeNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdClassification.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(TYPENAME);
  }
  
  public void setTypeName(String value)
  {
    if(value == null)
    {
      setValue(TYPENAME, "");
    }
    else
    {
      setValue(TYPENAME, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static MdClassification get(String oid)
  {
    return (MdClassification) com.runwaysdk.business.Business.get(oid);
  }
  
  public static MdClassification getByKey(String key)
  {
    return (MdClassification) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MdClassification lock(java.lang.String oid)
  {
    MdClassification _instance = MdClassification.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static MdClassification unlock(java.lang.String oid)
  {
    MdClassification _instance = MdClassification.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
