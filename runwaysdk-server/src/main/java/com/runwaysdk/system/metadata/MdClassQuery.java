/**
 * Copyright (c) 2022 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = 723001334)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdClass.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class MdClassQuery extends com.runwaysdk.system.metadata.MdTypeQuery

{

  public MdClassQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public MdClassQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
    super(valueQuery);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return com.runwaysdk.system.metadata.MdClass.CLASS;
  }
  public com.runwaysdk.query.SelectableBoolean getPublish()
  {
    return getPublish(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPublish(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdClass.PUBLISH, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPublish(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdClass.PUBLISH, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBlob getStubClass()
  {
    return getStubClass(null);

  }
 
  public com.runwaysdk.query.SelectableBlob getStubClass(String alias)
  {
    return (com.runwaysdk.query.SelectableBlob)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdClass.STUBCLASS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBlob getStubClass(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBlob)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdClass.STUBCLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBlob getStubDTOclass()
  {
    return getStubDTOclass(null);

  }
 
  public com.runwaysdk.query.SelectableBlob getStubDTOclass(String alias)
  {
    return (com.runwaysdk.query.SelectableBlob)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdClass.STUBDTOCLASS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBlob getStubDTOclass(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBlob)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdClass.STUBDTOCLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getStubDTOsource()
  {
    return getStubDTOsource(null);

  }
 
  public com.runwaysdk.query.SelectableChar getStubDTOsource(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdClass.STUBDTOSOURCE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getStubDTOsource(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdClass.STUBDTOSOURCE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getStubSource()
  {
    return getStubSource(null);

  }
 
  public com.runwaysdk.query.SelectableChar getStubSource(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdClass.STUBSOURCE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getStubSource(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdClass.STUBSOURCE, alias, displayLabel);

  }
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends MdClass> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<MdClass>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


  public com.runwaysdk.query.Condition inheritsFromEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_inheritsFromEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition inheritsFromEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.getBusinessQuery().isChildIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_inheritsFromEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.getBusinessQuery().isChildIn_SUBSELECT(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasParent(mdClassQuery));
    return this.getBusinessQuery().isChildIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasParent(mdClassQuery));
    return this.getBusinessQuery().isChildIn_SUBSELECT(classInheritanceQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_inheritsFromEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_inheritsFromEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.getBusinessQuery().isNotChildIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasParent(mdClassQuery));
    return this.getBusinessQuery().isNotChildIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasParent(mdClassQuery));
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(classInheritanceQuery);
  }


  public com.runwaysdk.query.Condition attribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_attribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition attribute(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.getBusinessQuery().isParentIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_attribute(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.getBusinessQuery().isParentIn_SUBSELECT(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeQuery));

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasChild(mdAttributeQuery));
    return this.getBusinessQuery().isParentIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasChild(mdAttributeQuery));
    return this.getBusinessQuery().isParentIn_SUBSELECT(classAttributeQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_attribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_attribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_attribute(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.getBusinessQuery().isNotParentIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_attribute(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeQuery));

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasChild(mdAttributeQuery));
    return this.getBusinessQuery().isNotParentIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasChild(mdAttributeQuery));
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(classAttributeQuery);
  }


  public com.runwaysdk.query.Condition concreteAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_concreteAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition concreteAttribute(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.getBusinessQuery().isParentIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_concreteAttribute(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.getBusinessQuery().isParentIn_SUBSELECT(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasChild(mdAttributeConcreteQuery));
    return this.getBusinessQuery().isParentIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasChild(mdAttributeConcreteQuery));
    return this.getBusinessQuery().isParentIn_SUBSELECT(classAttributeConcreteQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_concreteAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_concreteAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.getBusinessQuery().isNotParentIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasChild(mdAttributeConcreteQuery));
    return this.getBusinessQuery().isNotParentIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasChild(mdAttributeConcreteQuery));
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(classAttributeConcreteQuery);
  }


  public com.runwaysdk.query.Condition mdClassDimensions()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_mdClassDimensions()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition mdClassDimensions(com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    return this.getBusinessQuery().isParentIn(classHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_mdClassDimensions(com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    return this.getBusinessQuery().isParentIn_SUBSELECT(classHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassDimensionQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassDimensionQuery));

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery, com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    classHasDimensionQuery.AND(classHasDimensionQuery.hasChild(mdClassDimensionQuery));
    return this.getBusinessQuery().isParentIn(classHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery, com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    classHasDimensionQuery.AND(classHasDimensionQuery.hasChild(mdClassDimensionQuery));
    return this.getBusinessQuery().isParentIn_SUBSELECT(classHasDimensionQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_mdClassDimensions()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdClassDimensions()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    return this.getBusinessQuery().isNotParentIn(classHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(classHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassDimensionQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassDimensionQuery));

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery, com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    classHasDimensionQuery.AND(classHasDimensionQuery.hasChild(mdClassDimensionQuery));
    return this.getBusinessQuery().isNotParentIn(classHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery, com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    classHasDimensionQuery.AND(classHasDimensionQuery.hasChild(mdClassDimensionQuery));
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(classHasDimensionQuery);
  }


  public com.runwaysdk.query.Condition subEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_subEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition subEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.getBusinessQuery().isParentIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_subEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.getBusinessQuery().isParentIn_SUBSELECT(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassQuery));

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasChild(mdClassQuery));
    return this.getBusinessQuery().isParentIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasChild(mdClassQuery));
    return this.getBusinessQuery().isParentIn_SUBSELECT(classInheritanceQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_subEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_subEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_subEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.getBusinessQuery().isNotParentIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_subEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassQuery));

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasChild(mdClassQuery));
    return this.getBusinessQuery().isNotParentIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasChild(mdClassQuery));
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(classInheritanceQuery);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface MdClassQueryReferenceIF extends com.runwaysdk.system.metadata.MdTypeQuery.MdTypeQueryReferenceIF
  {

    public com.runwaysdk.query.SelectableBoolean getPublish();
    public com.runwaysdk.query.SelectableBoolean getPublish(String alias);
    public com.runwaysdk.query.SelectableBoolean getPublish(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBlob getStubClass();
    public com.runwaysdk.query.SelectableBlob getStubClass(String alias);
    public com.runwaysdk.query.SelectableBlob getStubClass(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBlob getStubDTOclass();
    public com.runwaysdk.query.SelectableBlob getStubDTOclass(String alias);
    public com.runwaysdk.query.SelectableBlob getStubDTOclass(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getStubDTOsource();
    public com.runwaysdk.query.SelectableChar getStubDTOsource(String alias);
    public com.runwaysdk.query.SelectableChar getStubDTOsource(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getStubSource();
    public com.runwaysdk.query.SelectableChar getStubSource(String alias);
    public com.runwaysdk.query.SelectableChar getStubSource(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(com.runwaysdk.system.metadata.MdClass mdClass);

    public com.runwaysdk.query.BasicCondition NE(com.runwaysdk.system.metadata.MdClass mdClass);


  public com.runwaysdk.query.Condition attribute();

  public com.runwaysdk.query.Condition attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery);

  public com.runwaysdk.query.Condition attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery);


  public com.runwaysdk.query.Condition SUBSELECT_attribute();

  public com.runwaysdk.query.Condition SUBSELECT_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery);

  public com.runwaysdk.query.Condition SUBSELECT_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery);


  public com.runwaysdk.query.Condition concreteAttribute();

  public com.runwaysdk.query.Condition concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery);

  public com.runwaysdk.query.Condition concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery);


  public com.runwaysdk.query.Condition SUBSELECT_concreteAttribute();

  public com.runwaysdk.query.Condition SUBSELECT_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery);

  public com.runwaysdk.query.Condition SUBSELECT_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery);


  public com.runwaysdk.query.Condition mdClassDimensions();

  public com.runwaysdk.query.Condition mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery);

  public com.runwaysdk.query.Condition mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery, com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery);


  public com.runwaysdk.query.Condition SUBSELECT_mdClassDimensions();

  public com.runwaysdk.query.Condition SUBSELECT_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery);

  public com.runwaysdk.query.Condition SUBSELECT_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery, com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery);


  public com.runwaysdk.query.Condition subEntity();

  public com.runwaysdk.query.Condition subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery);


  public com.runwaysdk.query.Condition SUBSELECT_subEntity();

  public com.runwaysdk.query.Condition SUBSELECT_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition SUBSELECT_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery);


  public com.runwaysdk.query.Condition NOT_IN_attribute();

  public com.runwaysdk.query.Condition NOT_IN_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery);

  public com.runwaysdk.query.Condition NOT_IN_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_attribute();

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery);


  public com.runwaysdk.query.Condition NOT_IN_concreteAttribute();

  public com.runwaysdk.query.Condition NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery);

  public com.runwaysdk.query.Condition NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_concreteAttribute();

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery);


  public com.runwaysdk.query.Condition NOT_IN_mdClassDimensions();

  public com.runwaysdk.query.Condition NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery);

  public com.runwaysdk.query.Condition NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery, com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdClassDimensions();

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery, com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery);


  public com.runwaysdk.query.Condition NOT_IN_subEntity();

  public com.runwaysdk.query.Condition NOT_IN_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition NOT_IN_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_subEntity();

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery);


  public com.runwaysdk.query.Condition inheritsFromEntity();
  public com.runwaysdk.query.Condition inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery);


  public com.runwaysdk.query.Condition SUBSELECT_inheritsFromEntity();
  public com.runwaysdk.query.Condition SUBSELECT_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition SUBSELECT_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery);


  public com.runwaysdk.query.Condition NOT_IN_inheritsFromEntity();
  public com.runwaysdk.query.Condition NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_inheritsFromEntity();
  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class MdClassQueryReference extends com.runwaysdk.system.metadata.MdTypeQuery.MdTypeQueryReference
 implements MdClassQueryReferenceIF

  {

  public MdClassQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(com.runwaysdk.system.metadata.MdClass mdClass)
    {
      if(mdClass == null) return this.EQ((java.lang.String)null);
      return this.EQ(mdClass.getOid());
    }

    public com.runwaysdk.query.BasicCondition NE(com.runwaysdk.system.metadata.MdClass mdClass)
    {
      if(mdClass == null) return this.NE((java.lang.String)null);
      return this.NE(mdClass.getOid());
    }

  public com.runwaysdk.query.SelectableBoolean getPublish()
  {
    return getPublish(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPublish(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdClass.PUBLISH, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPublish(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdClass.PUBLISH, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBlob getStubClass()
  {
    return getStubClass(null);

  }
 
  public com.runwaysdk.query.SelectableBlob getStubClass(String alias)
  {
    return (com.runwaysdk.query.SelectableBlob)this.get(com.runwaysdk.system.metadata.MdClass.STUBCLASS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBlob getStubClass(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBlob)this.get(com.runwaysdk.system.metadata.MdClass.STUBCLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBlob getStubDTOclass()
  {
    return getStubDTOclass(null);

  }
 
  public com.runwaysdk.query.SelectableBlob getStubDTOclass(String alias)
  {
    return (com.runwaysdk.query.SelectableBlob)this.get(com.runwaysdk.system.metadata.MdClass.STUBDTOCLASS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBlob getStubDTOclass(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBlob)this.get(com.runwaysdk.system.metadata.MdClass.STUBDTOCLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getStubDTOsource()
  {
    return getStubDTOsource(null);

  }
 
  public com.runwaysdk.query.SelectableChar getStubDTOsource(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdClass.STUBDTOSOURCE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getStubDTOsource(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdClass.STUBDTOSOURCE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getStubSource()
  {
    return getStubSource(null);

  }
 
  public com.runwaysdk.query.SelectableChar getStubSource(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdClass.STUBSOURCE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getStubSource(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdClass.STUBSOURCE, alias, displayLabel);

  }

  public com.runwaysdk.query.Condition attribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_attribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition attribute(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.isParentIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_attribute(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.isParentIn_SUBSELECT(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeQuery));

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasChild(mdAttributeQuery));
    return this.isParentIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasChild(mdAttributeQuery));
    return this.isParentIn_SUBSELECT(classAttributeQuery);
  }


  public com.runwaysdk.query.Condition concreteAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_concreteAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition concreteAttribute(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.isParentIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_concreteAttribute(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.isParentIn_SUBSELECT(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasChild(mdAttributeConcreteQuery));
    return this.isParentIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasChild(mdAttributeConcreteQuery));
    return this.isParentIn_SUBSELECT(classAttributeConcreteQuery);
  }


  public com.runwaysdk.query.Condition mdClassDimensions()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);

    return this.isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_mdClassDimensions()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition mdClassDimensions(com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    return this.isParentIn(classHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_mdClassDimensions(com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    return this.isParentIn_SUBSELECT(classHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassDimensionQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassDimensionQuery));

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery, com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    classHasDimensionQuery.AND(classHasDimensionQuery.hasChild(mdClassDimensionQuery));
    return this.isParentIn(classHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery, com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    classHasDimensionQuery.AND(classHasDimensionQuery.hasChild(mdClassDimensionQuery));
    return this.isParentIn_SUBSELECT(classHasDimensionQuery);
  }


  public com.runwaysdk.query.Condition subEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_subEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition subEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.isParentIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_subEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.isParentIn_SUBSELECT(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassQuery));

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasChild(mdClassQuery));
    return this.isParentIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasChild(mdClassQuery));
    return this.isParentIn_SUBSELECT(classInheritanceQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_attribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_attribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_attribute(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.isNotParentIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_attribute(com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    return this.isNotParentIn_SUBSELECT(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeQuery));

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasChild(mdAttributeQuery));
    return this.isNotParentIn(classAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_attribute(com.runwaysdk.system.metadata.MdAttributeQuery mdAttributeQuery, com.runwaysdk.system.metadata.ClassAttributeQuery classAttributeQuery)
  {
    classAttributeQuery.AND(classAttributeQuery.hasChild(mdAttributeQuery));
    return this.isNotParentIn_SUBSELECT(classAttributeQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_concreteAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_concreteAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.isNotParentIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.isNotParentIn_SUBSELECT(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasChild(mdAttributeConcreteQuery));
    return this.isNotParentIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_concreteAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasChild(mdAttributeConcreteQuery));
    return this.isNotParentIn_SUBSELECT(classAttributeConcreteQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_mdClassDimensions()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdClassDimensions()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    return this.isNotParentIn(classHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    return this.isNotParentIn_SUBSELECT(classHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassDimensionQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassDimensionQuery));

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery, com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    classHasDimensionQuery.AND(classHasDimensionQuery.hasChild(mdClassDimensionQuery));
    return this.isNotParentIn(classHasDimensionQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_mdClassDimensions(com.runwaysdk.system.metadata.MdClassDimensionQuery mdClassDimensionQuery, com.runwaysdk.system.metadata.ClassHasDimensionQuery classHasDimensionQuery)
  {
    classHasDimensionQuery.AND(classHasDimensionQuery.hasChild(mdClassDimensionQuery));
    return this.isNotParentIn_SUBSELECT(classHasDimensionQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_subEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_subEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_subEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.isNotParentIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_subEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.isNotParentIn_SUBSELECT(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdClassQuery));

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasChild(mdClassQuery));
    return this.isNotParentIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_subEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasChild(mdClassQuery));
    return this.isNotParentIn_SUBSELECT(classInheritanceQuery);
  }


  public com.runwaysdk.query.Condition inheritsFromEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.isChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_inheritsFromEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition inheritsFromEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.isChildIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_inheritsFromEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.isChildIn_SUBSELECT(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasParent(mdClassQuery));
    return this.isChildIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasParent(mdClassQuery));
    return this.isChildIn_SUBSELECT(classInheritanceQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_inheritsFromEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_inheritsFromEntity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.isNotChildIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    return this.isNotChildIn_SUBSELECT(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassInheritance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasParent(mdClassQuery));
    return this.isNotChildIn(classInheritanceQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_inheritsFromEntity(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassInheritanceQuery classInheritanceQuery)
  {
    classInheritanceQuery.AND(classInheritanceQuery.hasParent(mdClassQuery));
    return this.isNotChildIn_SUBSELECT(classInheritanceQuery);
  }

  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface MdClassQueryMultiReferenceIF extends com.runwaysdk.system.metadata.MdTypeQuery.MdTypeQueryMultiReferenceIF
  {

    public com.runwaysdk.query.SelectableBoolean getPublish();
    public com.runwaysdk.query.SelectableBoolean getPublish(String alias);
    public com.runwaysdk.query.SelectableBoolean getPublish(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBlob getStubClass();
    public com.runwaysdk.query.SelectableBlob getStubClass(String alias);
    public com.runwaysdk.query.SelectableBlob getStubClass(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBlob getStubDTOclass();
    public com.runwaysdk.query.SelectableBlob getStubDTOclass(String alias);
    public com.runwaysdk.query.SelectableBlob getStubDTOclass(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getStubDTOsource();
    public com.runwaysdk.query.SelectableChar getStubDTOsource(String alias);
    public com.runwaysdk.query.SelectableChar getStubDTOsource(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getStubSource();
    public com.runwaysdk.query.SelectableChar getStubSource(String alias);
    public com.runwaysdk.query.SelectableChar getStubSource(String alias, String displayLabel);

    public com.runwaysdk.query.Condition containsAny(com.runwaysdk.system.metadata.MdClass ... mdClass);
    public com.runwaysdk.query.Condition notContainsAny(com.runwaysdk.system.metadata.MdClass ... mdClass);
    public com.runwaysdk.query.Condition containsAll(com.runwaysdk.system.metadata.MdClass ... mdClass);
    public com.runwaysdk.query.Condition notContainsAll(com.runwaysdk.system.metadata.MdClass ... mdClass);
    public com.runwaysdk.query.Condition containsExactly(com.runwaysdk.system.metadata.MdClass ... mdClass);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class MdClassQueryMultiReference extends com.runwaysdk.system.metadata.MdTypeQuery.MdTypeQueryMultiReference
 implements MdClassQueryMultiReferenceIF

  {

  public MdClassQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(com.runwaysdk.system.metadata.MdClass ... mdClass)  {

      String[] itemIdArray = new String[mdClass.length]; 

      for (int i=0; i<mdClass.length; i++)
      {
        itemIdArray[i] = mdClass[i].getOid();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(com.runwaysdk.system.metadata.MdClass ... mdClass)  {

      String[] itemIdArray = new String[mdClass.length]; 

      for (int i=0; i<mdClass.length; i++)
      {
        itemIdArray[i] = mdClass[i].getOid();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(com.runwaysdk.system.metadata.MdClass ... mdClass)  {

      String[] itemIdArray = new String[mdClass.length]; 

      for (int i=0; i<mdClass.length; i++)
      {
        itemIdArray[i] = mdClass[i].getOid();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(com.runwaysdk.system.metadata.MdClass ... mdClass)  {

      String[] itemIdArray = new String[mdClass.length]; 

      for (int i=0; i<mdClass.length; i++)
      {
        itemIdArray[i] = mdClass[i].getOid();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(com.runwaysdk.system.metadata.MdClass ... mdClass)  {

      String[] itemIdArray = new String[mdClass.length]; 

      for (int i=0; i<mdClass.length; i++)
      {
        itemIdArray[i] = mdClass[i].getOid();
      }

      return this.containsExactly(itemIdArray);
  }
  public com.runwaysdk.query.SelectableBoolean getPublish()
  {
    return getPublish(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPublish(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdClass.PUBLISH, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPublish(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdClass.PUBLISH, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBlob getStubClass()
  {
    return getStubClass(null);

  }
 
  public com.runwaysdk.query.SelectableBlob getStubClass(String alias)
  {
    return (com.runwaysdk.query.SelectableBlob)this.get(com.runwaysdk.system.metadata.MdClass.STUBCLASS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBlob getStubClass(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBlob)this.get(com.runwaysdk.system.metadata.MdClass.STUBCLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBlob getStubDTOclass()
  {
    return getStubDTOclass(null);

  }
 
  public com.runwaysdk.query.SelectableBlob getStubDTOclass(String alias)
  {
    return (com.runwaysdk.query.SelectableBlob)this.get(com.runwaysdk.system.metadata.MdClass.STUBDTOCLASS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBlob getStubDTOclass(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBlob)this.get(com.runwaysdk.system.metadata.MdClass.STUBDTOCLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getStubDTOsource()
  {
    return getStubDTOsource(null);

  }
 
  public com.runwaysdk.query.SelectableChar getStubDTOsource(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdClass.STUBDTOSOURCE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getStubDTOsource(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdClass.STUBDTOSOURCE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getStubSource()
  {
    return getStubSource(null);

  }
 
  public com.runwaysdk.query.SelectableChar getStubSource(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdClass.STUBSOURCE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getStubSource(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdClass.STUBSOURCE, alias, displayLabel);

  }
  }
}
