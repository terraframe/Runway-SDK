/**
 * Copyright (c) 2015 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = 1506953525)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdIndex.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class MdIndexQuery extends com.runwaysdk.system.metadata.MetadataQuery

{

  public MdIndexQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public MdIndexQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
    super(valueQuery);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return com.runwaysdk.system.metadata.MdIndex.CLASS;
  }
  public com.runwaysdk.query.SelectableBoolean getActive()
  {
    return getActive(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getActive(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdIndex.ACTIVE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getActive(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdIndex.ACTIVE, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.metadata.MdIndex.DISPLAYLABEL);

    return (com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.metadata.MdIndex.DISPLAYLABEL, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.metadata.MdIndex.DISPLAYLABEL);

    return (com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.metadata.MdIndex.DISPLAYLABEL, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getIndexName()
  {
    return getIndexName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getIndexName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdIndex.INDEXNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getIndexName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdIndex.INDEXNAME, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity()
  {
    return getMdEntity(null);

  }
 
  public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.metadata.MdIndex.MDENTITY);

    return (com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.metadata.MdIndex.MDENTITY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.metadata.MdIndex.MDENTITY);

    return (com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.metadata.MdIndex.MDENTITY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getUniqueValue()
  {
    return getUniqueValue(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getUniqueValue(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdIndex.UNIQUEVALUE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getUniqueValue(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdIndex.UNIQUEVALUE, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdIndex.MDENTITY)) 
    {
       return new com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdIndex.DISPLAYLABEL)) 
    {
       return new com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.localFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends MdIndex> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<MdIndex>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


  public com.runwaysdk.query.Condition entity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_entity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition entity(com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    return this.getBusinessQuery().isChildIn(entityIndexQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_entity(com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    return this.getBusinessQuery().isChildIn_SUBSELECT(entityIndexQuery);
  }

  public com.runwaysdk.query.Condition entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdEntityQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdEntityQuery));

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery, com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    entityIndexQuery.AND(entityIndexQuery.hasParent(mdEntityQuery));
    return this.getBusinessQuery().isChildIn(entityIndexQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery, com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    entityIndexQuery.AND(entityIndexQuery.hasParent(mdEntityQuery));
    return this.getBusinessQuery().isChildIn_SUBSELECT(entityIndexQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_entity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_entity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_entity(com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    return this.getBusinessQuery().isNotChildIn(entityIndexQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_entity(com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(entityIndexQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdEntityQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdEntityQuery));

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery, com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    entityIndexQuery.AND(entityIndexQuery.hasParent(mdEntityQuery));
    return this.getBusinessQuery().isNotChildIn(entityIndexQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery, com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    entityIndexQuery.AND(entityIndexQuery.hasParent(mdEntityQuery));
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(entityIndexQuery);
  }


  public com.runwaysdk.query.Condition indexedAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_indexedAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition indexedAttribute(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.getBusinessQuery().isParentIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_indexedAttribute(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.getBusinessQuery().isParentIn_SUBSELECT(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasChild(mdAttributeConcreteQuery));
    return this.getBusinessQuery().isParentIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasChild(mdAttributeConcreteQuery));
    return this.getBusinessQuery().isParentIn_SUBSELECT(indexAttributeQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_indexedAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_indexedAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.getBusinessQuery().isNotParentIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasChild(mdAttributeConcreteQuery));
    return this.getBusinessQuery().isNotParentIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasChild(mdAttributeConcreteQuery));
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(indexAttributeQuery);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface MdIndexQueryReferenceIF extends com.runwaysdk.system.metadata.MetadataQuery.MetadataQueryReferenceIF
  {

    public com.runwaysdk.query.SelectableBoolean getActive();
    public com.runwaysdk.query.SelectableBoolean getActive(String alias);
    public com.runwaysdk.query.SelectableBoolean getActive(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel();
    public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias);
    public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getIndexName();
    public com.runwaysdk.query.SelectableChar getIndexName(String alias);
    public com.runwaysdk.query.SelectableChar getIndexName(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity();
    public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity(String alias);
    public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getUniqueValue();
    public com.runwaysdk.query.SelectableBoolean getUniqueValue(String alias);
    public com.runwaysdk.query.SelectableBoolean getUniqueValue(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(com.runwaysdk.system.metadata.MdIndex mdIndex);

    public com.runwaysdk.query.BasicCondition NE(com.runwaysdk.system.metadata.MdIndex mdIndex);


  public com.runwaysdk.query.Condition indexedAttribute();

  public com.runwaysdk.query.Condition indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery);

  public com.runwaysdk.query.Condition indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery);


  public com.runwaysdk.query.Condition SUBSELECT_indexedAttribute();

  public com.runwaysdk.query.Condition SUBSELECT_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery);

  public com.runwaysdk.query.Condition SUBSELECT_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery);


  public com.runwaysdk.query.Condition NOT_IN_indexedAttribute();

  public com.runwaysdk.query.Condition NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery);

  public com.runwaysdk.query.Condition NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_indexedAttribute();

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery);


  public com.runwaysdk.query.Condition entity();
  public com.runwaysdk.query.Condition entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery);

  public com.runwaysdk.query.Condition entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery, com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery);


  public com.runwaysdk.query.Condition SUBSELECT_entity();
  public com.runwaysdk.query.Condition SUBSELECT_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery);

  public com.runwaysdk.query.Condition SUBSELECT_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery, com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery);


  public com.runwaysdk.query.Condition NOT_IN_entity();
  public com.runwaysdk.query.Condition NOT_IN_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery);

  public com.runwaysdk.query.Condition NOT_IN_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery, com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_entity();
  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery, com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class MdIndexQueryReference extends com.runwaysdk.system.metadata.MetadataQuery.MetadataQueryReference
 implements MdIndexQueryReferenceIF

  {

  public MdIndexQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(com.runwaysdk.system.metadata.MdIndex mdIndex)
    {
      if(mdIndex == null) return this.EQ((java.lang.String)null);
      return this.EQ(mdIndex.getOid());
    }

    public com.runwaysdk.query.BasicCondition NE(com.runwaysdk.system.metadata.MdIndex mdIndex)
    {
      if(mdIndex == null) return this.NE((java.lang.String)null);
      return this.NE(mdIndex.getOid());
    }

  public com.runwaysdk.query.SelectableBoolean getActive()
  {
    return getActive(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getActive(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdIndex.ACTIVE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getActive(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdIndex.ACTIVE, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {
    return (com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF)this.attributeFactory(com.runwaysdk.system.metadata.MdIndex.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF)this.attributeFactory(com.runwaysdk.system.metadata.MdIndex.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getIndexName()
  {
    return getIndexName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getIndexName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdIndex.INDEXNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getIndexName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdIndex.INDEXNAME, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity()
  {
    return getMdEntity(null);

  }
 
  public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity(String alias)
  {
    return (com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF)this.get(com.runwaysdk.system.metadata.MdIndex.MDENTITY, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF)this.get(com.runwaysdk.system.metadata.MdIndex.MDENTITY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getUniqueValue()
  {
    return getUniqueValue(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getUniqueValue(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdIndex.UNIQUEVALUE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getUniqueValue(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdIndex.UNIQUEVALUE, alias, displayLabel);

  }

  public com.runwaysdk.query.Condition indexedAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_indexedAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition indexedAttribute(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.isParentIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_indexedAttribute(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.isParentIn_SUBSELECT(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasChild(mdAttributeConcreteQuery));
    return this.isParentIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasChild(mdAttributeConcreteQuery));
    return this.isParentIn_SUBSELECT(indexAttributeQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_indexedAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_indexedAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.isNotParentIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.isNotParentIn_SUBSELECT(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeConcreteQuery));

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasChild(mdAttributeConcreteQuery));
    return this.isNotParentIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_indexedAttribute(com.runwaysdk.system.metadata.MdAttributeConcreteQuery mdAttributeConcreteQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasChild(mdAttributeConcreteQuery));
    return this.isNotParentIn_SUBSELECT(indexAttributeQuery);
  }


  public com.runwaysdk.query.Condition entity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);

    return this.isChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_entity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition entity(com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    return this.isChildIn(entityIndexQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_entity(com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    return this.isChildIn_SUBSELECT(entityIndexQuery);
  }

  public com.runwaysdk.query.Condition entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdEntityQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdEntityQuery));

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery, com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    entityIndexQuery.AND(entityIndexQuery.hasParent(mdEntityQuery));
    return this.isChildIn(entityIndexQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery, com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    entityIndexQuery.AND(entityIndexQuery.hasParent(mdEntityQuery));
    return this.isChildIn_SUBSELECT(entityIndexQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_entity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_entity()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_entity(com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    return this.isNotChildIn(entityIndexQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_entity(com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    return this.isNotChildIn_SUBSELECT(entityIndexQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdEntityQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.EntityIndex.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdEntityQuery));

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery, com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    entityIndexQuery.AND(entityIndexQuery.hasParent(mdEntityQuery));
    return this.isNotChildIn(entityIndexQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_entity(com.runwaysdk.system.metadata.MdEntityQuery mdEntityQuery, com.runwaysdk.system.metadata.EntityIndexQuery entityIndexQuery)
  {
    entityIndexQuery.AND(entityIndexQuery.hasParent(mdEntityQuery));
    return this.isNotChildIn_SUBSELECT(entityIndexQuery);
  }

  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdIndex.MDENTITY)) 
    {
       return new com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdIndex.DISPLAYLABEL)) 
    {
       return new com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.localFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface MdIndexQueryMultiReferenceIF extends com.runwaysdk.system.metadata.MetadataQuery.MetadataQueryMultiReferenceIF
  {

    public com.runwaysdk.query.SelectableBoolean getActive();
    public com.runwaysdk.query.SelectableBoolean getActive(String alias);
    public com.runwaysdk.query.SelectableBoolean getActive(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel();
    public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias);
    public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getIndexName();
    public com.runwaysdk.query.SelectableChar getIndexName(String alias);
    public com.runwaysdk.query.SelectableChar getIndexName(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity();
    public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity(String alias);
    public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getUniqueValue();
    public com.runwaysdk.query.SelectableBoolean getUniqueValue(String alias);
    public com.runwaysdk.query.SelectableBoolean getUniqueValue(String alias, String displayLabel);

    public com.runwaysdk.query.Condition containsAny(com.runwaysdk.system.metadata.MdIndex ... mdIndex);
    public com.runwaysdk.query.Condition notContainsAny(com.runwaysdk.system.metadata.MdIndex ... mdIndex);
    public com.runwaysdk.query.Condition containsAll(com.runwaysdk.system.metadata.MdIndex ... mdIndex);
    public com.runwaysdk.query.Condition notContainsAll(com.runwaysdk.system.metadata.MdIndex ... mdIndex);
    public com.runwaysdk.query.Condition containsExactly(com.runwaysdk.system.metadata.MdIndex ... mdIndex);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class MdIndexQueryMultiReference extends com.runwaysdk.system.metadata.MetadataQuery.MetadataQueryMultiReference
 implements MdIndexQueryMultiReferenceIF

  {

  public MdIndexQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(com.runwaysdk.system.metadata.MdIndex ... mdIndex)  {

      String[] itemIdArray = new String[mdIndex.length]; 

      for (int i=0; i<mdIndex.length; i++)
      {
        itemIdArray[i] = mdIndex[i].getOid();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(com.runwaysdk.system.metadata.MdIndex ... mdIndex)  {

      String[] itemIdArray = new String[mdIndex.length]; 

      for (int i=0; i<mdIndex.length; i++)
      {
        itemIdArray[i] = mdIndex[i].getOid();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(com.runwaysdk.system.metadata.MdIndex ... mdIndex)  {

      String[] itemIdArray = new String[mdIndex.length]; 

      for (int i=0; i<mdIndex.length; i++)
      {
        itemIdArray[i] = mdIndex[i].getOid();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(com.runwaysdk.system.metadata.MdIndex ... mdIndex)  {

      String[] itemIdArray = new String[mdIndex.length]; 

      for (int i=0; i<mdIndex.length; i++)
      {
        itemIdArray[i] = mdIndex[i].getOid();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(com.runwaysdk.system.metadata.MdIndex ... mdIndex)  {

      String[] itemIdArray = new String[mdIndex.length]; 

      for (int i=0; i<mdIndex.length; i++)
      {
        itemIdArray[i] = mdIndex[i].getOid();
      }

      return this.containsExactly(itemIdArray);
  }
  public com.runwaysdk.query.SelectableBoolean getActive()
  {
    return getActive(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getActive(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdIndex.ACTIVE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getActive(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdIndex.ACTIVE, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {
    return (com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF)this.attributeFactory(com.runwaysdk.system.metadata.MdIndex.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF)this.attributeFactory(com.runwaysdk.system.metadata.MdIndex.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getIndexName()
  {
    return getIndexName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getIndexName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdIndex.INDEXNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getIndexName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdIndex.INDEXNAME, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity()
  {
    return getMdEntity(null);

  }
 
  public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity(String alias)
  {
    return (com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF)this.get(com.runwaysdk.system.metadata.MdIndex.MDENTITY, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF getMdEntity(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReferenceIF)this.get(com.runwaysdk.system.metadata.MdIndex.MDENTITY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getUniqueValue()
  {
    return getUniqueValue(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getUniqueValue(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdIndex.UNIQUEVALUE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getUniqueValue(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdIndex.UNIQUEVALUE, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdIndex.MDENTITY)) 
    {
       return new com.runwaysdk.system.metadata.MdEntityQuery.MdEntityQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdIndex.DISPLAYLABEL)) 
    {
       return new com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.localFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  }
}
