package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = 866538441)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdAttributeUUID.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MdAttributeUUIDBase extends com.runwaysdk.system.metadata.MdAttributePrimitive
{
  public final static String CLASS = "com.runwaysdk.system.metadata.MdAttributeUUID";
  public static java.lang.String DEFAULTVALUE = "defaultValue";
  @SuppressWarnings("unused")
  private static final long serialVersionUID = 866538441;
  
  public MdAttributeUUIDBase()
  {
    super();
  }
  
  public String getDefaultValue()
  {
    return getValue(DEFAULTVALUE);
  }
  
  public void validateDefaultValue()
  {
    this.validateAttribute(DEFAULTVALUE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF getDefaultValueMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdAttributeUUID.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF)mdClassIF.definesAttribute(DEFAULTVALUE);
  }
  
  public void setDefaultValue(String value)
  {
    if(value == null)
    {
      setValue(DEFAULTVALUE, "");
    }
    else
    {
      setValue(DEFAULTVALUE, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static MdAttributeUUID get(String oid)
  {
    return (MdAttributeUUID) com.runwaysdk.business.Business.get(oid);
  }
  
  public static MdAttributeUUID getByKey(String key)
  {
    return (MdAttributeUUID) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MdAttributeUUID lock(java.lang.String oid)
  {
    MdAttributeUUID _instance = MdAttributeUUID.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static MdAttributeUUID unlock(java.lang.String oid)
  {
    MdAttributeUUID _instance = MdAttributeUUID.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
