/**
 * Copyright (c) 2022 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = -1383666798)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdDimension.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MdDimensionBase extends com.runwaysdk.system.metadata.Metadata
{
  public final static String CLASS = "com.runwaysdk.system.metadata.MdDimension";
  public static java.lang.String DISPLAYLABEL = "displayLabel";
  private com.runwaysdk.business.Struct displayLabel = null;
  
  public static java.lang.String NAME = "name";
  private static final long serialVersionUID = -1383666798;
  
  public MdDimensionBase()
  {
    super();
    displayLabel = super.getStruct("displayLabel");
  }
  
  public com.runwaysdk.system.metadata.MetadataDisplayLabel getDisplayLabel()
  {
    return (com.runwaysdk.system.metadata.MetadataDisplayLabel) displayLabel;
  }
  
  public void validateDisplayLabel()
  {
    this.validateAttribute(DISPLAYLABEL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getDisplayLabelMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdDimension.CLASS);
    return mdClassIF.definesAttribute(DISPLAYLABEL);
  }
  
  public String getName()
  {
    return getValue(NAME);
  }
  
  public void validateName()
  {
    this.validateAttribute(NAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdDimension.CLASS);
    return mdClassIF.definesAttribute(NAME);
  }
  
  public void setName(String value)
  {
    if(value == null)
    {
      setValue(NAME, "");
    }
    else
    {
      setValue(NAME, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public com.runwaysdk.system.metadata.DimensionHasClass addMdClassDimensions(com.runwaysdk.system.metadata.MdClassDimension mdClassDimension)
  {
    return (com.runwaysdk.system.metadata.DimensionHasClass) addChild(mdClassDimension, com.runwaysdk.system.metadata.DimensionHasClass.CLASS);
  }
  
  public void removeMdClassDimensions(com.runwaysdk.system.metadata.MdClassDimension mdClassDimension)
  {
    removeAllChildren(mdClassDimension, com.runwaysdk.system.metadata.DimensionHasClass.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdClassDimension> getAllMdClassDimensions()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdClassDimension>) getChildren(com.runwaysdk.system.metadata.DimensionHasClass.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.DimensionHasClass> getAllMdClassDimensionsRel()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.DimensionHasClass>) getChildRelationships(com.runwaysdk.system.metadata.DimensionHasClass.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.system.metadata.DimensionHasClass getMdClassDimensionsRel(com.runwaysdk.system.metadata.MdClassDimension mdClassDimension)
  {
    com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.DimensionHasClass> iterator = (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.DimensionHasClass>) getRelationshipsWithChild(mdClassDimension, com.runwaysdk.system.metadata.DimensionHasClass.CLASS);
    try
    {
      if (iterator.hasNext())
      {
        return iterator.next();
      }
      else
      {
        return null;
      }
    }
    finally
    {
      iterator.close();
    }
  }
  
  public com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute addgetMdAttributeConcrete(com.runwaysdk.system.metadata.MdAttributeConcrete mdAttributeConcrete)
  {
    return (com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute) addChild(mdAttributeConcrete, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);
  }
  
  public void removegetMdAttributeConcrete(com.runwaysdk.system.metadata.MdAttributeConcrete mdAttributeConcrete)
  {
    removeAllChildren(mdAttributeConcrete, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdAttributeConcrete> getAllgetMdAttributeConcrete()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdAttributeConcrete>) getChildren(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute> getAllgetMdAttributeConcreteRel()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute>) getChildRelationships(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute getgetMdAttributeConcreteRel(com.runwaysdk.system.metadata.MdAttributeConcrete mdAttributeConcrete)
  {
    com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute> iterator = (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute>) getRelationshipsWithChild(mdAttributeConcrete, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);
    try
    {
      if (iterator.hasNext())
      {
        return iterator.next();
      }
      else
      {
        return null;
      }
    }
    finally
    {
      iterator.close();
    }
  }
  
  public static MdDimension get(String oid)
  {
    return (MdDimension) com.runwaysdk.business.Business.get(oid);
  }
  
  public static MdDimension getByKey(String key)
  {
    return (MdDimension) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MdDimension lock(java.lang.String oid)
  {
    MdDimension _instance = MdDimension.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static MdDimension unlock(java.lang.String oid)
  {
    MdDimension _instance = MdDimension.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
