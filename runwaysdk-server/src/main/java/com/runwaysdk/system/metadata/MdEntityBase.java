/**
 * Copyright (c) 2015 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = -1858355606)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdEntity.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MdEntityBase extends com.runwaysdk.system.metadata.MdClass
{
  public final static String CLASS = "com.runwaysdk.system.metadata.MdEntity";
  public static java.lang.String CACHESIZE = "cacheSize";
  public static java.lang.String ENFORCESITEMASTER = "enforceSiteMaster";
  public static java.lang.String HASDETERMINISTICIDS = "hasDeterministicIds";
  public static java.lang.String QUERYCLASS = "queryClass";
  public static java.lang.String QUERYDTOCLASS = "queryDTOclass";
  public static java.lang.String QUERYDTOSOURCE = "queryDTOsource";
  public static java.lang.String QUERYSOURCE = "querySource";
  public static java.lang.String TABLENAME = "tableName";
  private static final long serialVersionUID = -1858355606;
  
  public MdEntityBase()
  {
    super();
  }
  
  public Integer getCacheSize()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(CACHESIZE));
  }
  
  public void validateCacheSize()
  {
    this.validateAttribute(CACHESIZE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getCacheSizeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdEntity.CLASS);
    return mdClassIF.definesAttribute(CACHESIZE);
  }
  
  public void setCacheSize(Integer value)
  {
    if(value == null)
    {
      setValue(CACHESIZE, "");
    }
    else
    {
      setValue(CACHESIZE, java.lang.Integer.toString(value));
    }
  }
  
  public Boolean getEnforceSiteMaster()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ENFORCESITEMASTER));
  }
  
  public void validateEnforceSiteMaster()
  {
    this.validateAttribute(ENFORCESITEMASTER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getEnforceSiteMasterMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdEntity.CLASS);
    return mdClassIF.definesAttribute(ENFORCESITEMASTER);
  }
  
  public void setEnforceSiteMaster(Boolean value)
  {
    if(value == null)
    {
      setValue(ENFORCESITEMASTER, "");
    }
    else
    {
      setValue(ENFORCESITEMASTER, java.lang.Boolean.toString(value));
    }
  }
  
  public Boolean getHasDeterministicIds()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(HASDETERMINISTICIDS));
  }
  
  public void validateHasDeterministicIds()
  {
    this.validateAttribute(HASDETERMINISTICIDS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getHasDeterministicIdsMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdEntity.CLASS);
    return mdClassIF.definesAttribute(HASDETERMINISTICIDS);
  }
  
  public void setHasDeterministicIds(Boolean value)
  {
    if(value == null)
    {
      setValue(HASDETERMINISTICIDS, "");
    }
    else
    {
      setValue(HASDETERMINISTICIDS, java.lang.Boolean.toString(value));
    }
  }
  
  public byte[] getQueryClass()
  {
    return getBlob(QUERYCLASS);
  }
  
  public void validateQueryClass()
  {
    this.validateAttribute(QUERYCLASS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getQueryClassMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdEntity.CLASS);
    return mdClassIF.definesAttribute(QUERYCLASS);
  }
  
  public byte[] getQueryDTOclass()
  {
    return getBlob(QUERYDTOCLASS);
  }
  
  public void validateQueryDTOclass()
  {
    this.validateAttribute(QUERYDTOCLASS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getQueryDTOclassMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdEntity.CLASS);
    return mdClassIF.definesAttribute(QUERYDTOCLASS);
  }
  
  public String getQueryDTOsource()
  {
    return getValue(QUERYDTOSOURCE);
  }
  
  public void validateQueryDTOsource()
  {
    this.validateAttribute(QUERYDTOSOURCE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getQueryDTOsourceMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdEntity.CLASS);
    return mdClassIF.definesAttribute(QUERYDTOSOURCE);
  }
  
  public String getQuerySource()
  {
    return getValue(QUERYSOURCE);
  }
  
  public void validateQuerySource()
  {
    this.validateAttribute(QUERYSOURCE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getQuerySourceMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdEntity.CLASS);
    return mdClassIF.definesAttribute(QUERYSOURCE);
  }
  
  public String getTableName()
  {
    return getValue(TABLENAME);
  }
  
  public void validateTableName()
  {
    this.validateAttribute(TABLENAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getTableNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdEntity.CLASS);
    return mdClassIF.definesAttribute(TABLENAME);
  }
  
  public void setTableName(String value)
  {
    if(value == null)
    {
      setValue(TABLENAME, "");
    }
    else
    {
      setValue(TABLENAME, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public com.runwaysdk.system.metadata.EntityIndex addIndex(com.runwaysdk.system.metadata.MdIndex mdIndex)
  {
    return (com.runwaysdk.system.metadata.EntityIndex) addChild(mdIndex, com.runwaysdk.system.metadata.EntityIndex.CLASS);
  }
  
  public void removeIndex(com.runwaysdk.system.metadata.MdIndex mdIndex)
  {
    removeAllChildren(mdIndex, com.runwaysdk.system.metadata.EntityIndex.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdIndex> getAllIndex()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdIndex>) getChildren(com.runwaysdk.system.metadata.EntityIndex.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.EntityIndex> getAllIndexRel()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.EntityIndex>) getChildRelationships(com.runwaysdk.system.metadata.EntityIndex.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.system.metadata.EntityIndex getIndexRel(com.runwaysdk.system.metadata.MdIndex mdIndex)
  {
    com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.EntityIndex> iterator = (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.EntityIndex>) getRelationshipsWithChild(mdIndex, com.runwaysdk.system.metadata.EntityIndex.CLASS);
    try
    {
      if (iterator.hasNext())
      {
        return iterator.next();
      }
      else
      {
        return null;
      }
    }
    finally
    {
      iterator.close();
    }
  }
  
  public static MdEntity get(String oid)
  {
    return (MdEntity) com.runwaysdk.business.Business.get(oid);
  }
  
  public static MdEntity getByKey(String key)
  {
    return (MdEntity) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MdEntity lock(java.lang.String oid)
  {
    MdEntity _instance = MdEntity.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static MdEntity unlock(java.lang.String oid)
  {
    MdEntity _instance = MdEntity.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
