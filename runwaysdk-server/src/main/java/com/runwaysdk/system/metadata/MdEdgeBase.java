package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = 654336844)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdEdge.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MdEdgeBase extends com.runwaysdk.system.metadata.MdGraphClass
{
  public final static String CLASS = "com.runwaysdk.system.metadata.MdEdge";
  public final static java.lang.String CHILDMDVERTEX = "childMdVertex";
  public final static java.lang.String PARENTMDVERTEX = "parentMdVertex";
  public final static java.lang.String SUPERMDEDGE = "superMdEdge";
  @SuppressWarnings("unused")
  private static final long serialVersionUID = 654336844;
  
  public MdEdgeBase()
  {
    super();
  }
  
  public com.runwaysdk.system.metadata.MdVertex getChildMdVertex()
  {
    if (getValue(CHILDMDVERTEX).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdVertex.get(getValue(CHILDMDVERTEX));
    }
  }
  
  public String getChildMdVertexOid()
  {
    return getValue(CHILDMDVERTEX);
  }
  
  public void validateChildMdVertex()
  {
    this.validateAttribute(CHILDMDVERTEX);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getChildMdVertexMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdEdge.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(CHILDMDVERTEX);
  }
  
  public void setChildMdVertex(com.runwaysdk.system.metadata.MdVertex value)
  {
    if(value == null)
    {
      setValue(CHILDMDVERTEX, "");
    }
    else
    {
      setValue(CHILDMDVERTEX, value.getOid());
    }
  }
  
  public void setChildMdVertexId(java.lang.String oid)
  {
    if(oid == null)
    {
      setValue(CHILDMDVERTEX, "");
    }
    else
    {
      setValue(CHILDMDVERTEX, oid);
    }
  }
  
  public com.runwaysdk.system.metadata.MdVertex getParentMdVertex()
  {
    if (getValue(PARENTMDVERTEX).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdVertex.get(getValue(PARENTMDVERTEX));
    }
  }
  
  public String getParentMdVertexOid()
  {
    return getValue(PARENTMDVERTEX);
  }
  
  public void validateParentMdVertex()
  {
    this.validateAttribute(PARENTMDVERTEX);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getParentMdVertexMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdEdge.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(PARENTMDVERTEX);
  }
  
  public void setParentMdVertex(com.runwaysdk.system.metadata.MdVertex value)
  {
    if(value == null)
    {
      setValue(PARENTMDVERTEX, "");
    }
    else
    {
      setValue(PARENTMDVERTEX, value.getOid());
    }
  }
  
  public void setParentMdVertexId(java.lang.String oid)
  {
    if(oid == null)
    {
      setValue(PARENTMDVERTEX, "");
    }
    else
    {
      setValue(PARENTMDVERTEX, oid);
    }
  }
  
  public com.runwaysdk.system.metadata.MdEdge getSuperMdEdge()
  {
    if (getValue(SUPERMDEDGE).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdEdge.get(getValue(SUPERMDEDGE));
    }
  }
  
  public String getSuperMdEdgeOid()
  {
    return getValue(SUPERMDEDGE);
  }
  
  public void validateSuperMdEdge()
  {
    this.validateAttribute(SUPERMDEDGE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getSuperMdEdgeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdEdge.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(SUPERMDEDGE);
  }
  
  public void setSuperMdEdge(com.runwaysdk.system.metadata.MdEdge value)
  {
    if(value == null)
    {
      setValue(SUPERMDEDGE, "");
    }
    else
    {
      setValue(SUPERMDEDGE, value.getOid());
    }
  }
  
  public void setSuperMdEdgeId(java.lang.String oid)
  {
    if(oid == null)
    {
      setValue(SUPERMDEDGE, "");
    }
    else
    {
      setValue(SUPERMDEDGE, oid);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public com.runwaysdk.system.metadata.graph.EdgeInheritance addsubEdgeClasses(com.runwaysdk.system.metadata.MdEdge mdEdge)
  {
    return (com.runwaysdk.system.metadata.graph.EdgeInheritance) addChild(mdEdge, com.runwaysdk.system.metadata.graph.EdgeInheritance.CLASS);
  }
  
  public void removesubEdgeClasses(com.runwaysdk.system.metadata.MdEdge mdEdge)
  {
    removeAllChildren(mdEdge, com.runwaysdk.system.metadata.graph.EdgeInheritance.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdEdge> getAllsubEdgeClasses()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdEdge>) getChildren(com.runwaysdk.system.metadata.graph.EdgeInheritance.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.graph.EdgeInheritance> getAllsubEdgeClassesRel()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.graph.EdgeInheritance>) getChildRelationships(com.runwaysdk.system.metadata.graph.EdgeInheritance.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.system.metadata.graph.EdgeInheritance getsubEdgeClassesRel(com.runwaysdk.system.metadata.MdEdge mdEdge)
  {
    com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.graph.EdgeInheritance> iterator = (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.graph.EdgeInheritance>) getRelationshipsWithChild(mdEdge, com.runwaysdk.system.metadata.graph.EdgeInheritance.CLASS);
    try
    {
      if (iterator.hasNext())
      {
        return iterator.next();
      }
      else
      {
        return null;
      }
    }
    finally
    {
      iterator.close();
    }
  }
  
  public com.runwaysdk.system.metadata.graph.EdgeInheritance addsuperEdgeClass(com.runwaysdk.system.metadata.MdEdge mdEdge)
  {
    return (com.runwaysdk.system.metadata.graph.EdgeInheritance) addParent(mdEdge, com.runwaysdk.system.metadata.graph.EdgeInheritance.CLASS);
  }
  
  public void removesuperEdgeClass(com.runwaysdk.system.metadata.MdEdge mdEdge)
  {
    removeAllParents(mdEdge, com.runwaysdk.system.metadata.graph.EdgeInheritance.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdEdge> getAllsuperEdgeClass()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdEdge>) getParents(com.runwaysdk.system.metadata.graph.EdgeInheritance.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.graph.EdgeInheritance> getAllsuperEdgeClassRel()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.graph.EdgeInheritance>) getParentRelationships(com.runwaysdk.system.metadata.graph.EdgeInheritance.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.system.metadata.graph.EdgeInheritance getsuperEdgeClassRel(com.runwaysdk.system.metadata.MdEdge mdEdge)
  {
    com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.graph.EdgeInheritance> iterator = (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.graph.EdgeInheritance>) getRelationshipsWithParent(mdEdge, com.runwaysdk.system.metadata.graph.EdgeInheritance.CLASS);
    try
    {
      if (iterator.hasNext())
      {
        return iterator.next();
      }
      else
      {
        return null;
      }
    }
    finally
    {
      iterator.close();
    }
  }
  
  public static MdEdge get(String oid)
  {
    return (MdEdge) com.runwaysdk.business.Business.get(oid);
  }
  
  public static MdEdge getByKey(String key)
  {
    return (MdEdge) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MdEdge lock(java.lang.String oid)
  {
    MdEdge _instance = MdEdge.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static MdEdge unlock(java.lang.String oid)
  {
    MdEdge _instance = MdEdge.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
