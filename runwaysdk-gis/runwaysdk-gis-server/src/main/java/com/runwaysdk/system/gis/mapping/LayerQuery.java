/**
 * Copyright (c) 2015 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK GIS(tm).
 *
 * Runway SDK GIS(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK GIS(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK GIS(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system.gis.mapping;

@com.runwaysdk.business.ClassSignature(hash = 1844224479)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to Layer.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class LayerQuery extends com.runwaysdk.query.GeneratedBusinessQuery

{

  public LayerQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public LayerQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return com.runwaysdk.system.gis.mapping.Layer.CLASS;
  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.CREATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.CREATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReferenceIF getDefaultStyle()
  {
    return getDefaultStyle(null);

  }
 
  public com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReferenceIF getDefaultStyle(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.DEFAULTSTYLE);

    return (com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.DEFAULTSTYLE, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReferenceIF getDefaultStyle(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.DEFAULTSTYLE);

    return (com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.DEFAULTSTYLE, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.ENTITYDOMAIN, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.ENTITYDOMAIN, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getForceRefresh()
  {
    return getForceRefresh(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getForceRefresh(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.FORCEREFRESH, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getForceRefresh(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.FORCEREFRESH, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableChar getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.ID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.LASTUPDATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.LASTUPDATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStructIF getLayerName()
  {
    return getLayerName(null);

  }
 
  public com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStructIF getLayerName(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.LAYERNAME);

    return (com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStructIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.LAYERNAME, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStructIF getLayerName(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.LAYERNAME);

    return (com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStructIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.LAYERNAME, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.LOCKEDBY);

    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.LOCKEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.LOCKEDBY);

    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.LOCKEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.OWNER, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.OWNER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getPublished()
  {
    return getPublished(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPublished(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.PUBLISHED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPublished(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.PUBLISHED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReferenceIF getSqlBuilder()
  {
    return getSqlBuilder(null);

  }
 
  public com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReferenceIF getSqlBuilder(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.SQLBUILDER);

    return (com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.SQLBUILDER, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReferenceIF getSqlBuilder(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.gis.mapping.Layer.SQLBUILDER);

    return (com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.gis.mapping.Layer.SQLBUILDER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.gis.mapping.Layer.TYPE, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.gis.mapping.Layer.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.gis.mapping.Layer.DEFAULTSTYLE)) 
    {
       return new com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.gis.mapping.Layer.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.gis.mapping.Layer.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.gis.mapping.Layer.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.UsersQuery.UsersQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.gis.mapping.Layer.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.gis.mapping.Layer.SQLBUILDER)) 
    {
       return new com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.gis.mapping.Layer.LAYERNAME)) 
    {
       return new com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends Layer> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<Layer>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


  public com.runwaysdk.query.Condition containingMap()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_containingMap()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition containingMap(com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    return this.getBusinessQuery().isChildIn(hasLayerQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_containingMap(com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    return this.getBusinessQuery().isChildIn_SUBSELECT(hasLayerQuery);
  }

  public com.runwaysdk.query.Condition containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(generatedMapQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(generatedMapQuery));

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery, com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    hasLayerQuery.AND(hasLayerQuery.hasParent(generatedMapQuery));
    return this.getBusinessQuery().isChildIn(hasLayerQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery, com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    hasLayerQuery.AND(hasLayerQuery.hasParent(generatedMapQuery));
    return this.getBusinessQuery().isChildIn_SUBSELECT(hasLayerQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_containingMap()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_containingMap()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    return this.getBusinessQuery().isNotChildIn(hasLayerQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(hasLayerQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(generatedMapQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(generatedMapQuery));

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery, com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    hasLayerQuery.AND(hasLayerQuery.hasParent(generatedMapQuery));
    return this.getBusinessQuery().isNotChildIn(hasLayerQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery, com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    hasLayerQuery.AND(hasLayerQuery.hasParent(generatedMapQuery));
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(hasLayerQuery);
  }


  public com.runwaysdk.query.Condition hasThematicAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_hasThematicAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition hasThematicAttribute(com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    return this.getBusinessQuery().isParentIn(hasThematicAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_hasThematicAttribute(com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    return this.getBusinessQuery().isParentIn_SUBSELECT(hasThematicAttributeQuery);
  }

  public com.runwaysdk.query.Condition hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(thematicAttributeQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(thematicAttributeQuery));

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery, com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    hasThematicAttributeQuery.AND(hasThematicAttributeQuery.hasChild(thematicAttributeQuery));
    return this.getBusinessQuery().isParentIn(hasThematicAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery, com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    hasThematicAttributeQuery.AND(hasThematicAttributeQuery.hasChild(thematicAttributeQuery));
    return this.getBusinessQuery().isParentIn_SUBSELECT(hasThematicAttributeQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_hasThematicAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_hasThematicAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    return this.getBusinessQuery().isNotParentIn(hasThematicAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(hasThematicAttributeQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(thematicAttributeQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(thematicAttributeQuery));

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery, com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    hasThematicAttributeQuery.AND(hasThematicAttributeQuery.hasChild(thematicAttributeQuery));
    return this.getBusinessQuery().isNotParentIn(hasThematicAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery, com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    hasThematicAttributeQuery.AND(hasThematicAttributeQuery.hasChild(thematicAttributeQuery));
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(hasThematicAttributeQuery);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface LayerQueryReferenceIF extends com.runwaysdk.query.SelectableReference
  {

    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReferenceIF getDefaultStyle();
    public com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReferenceIF getDefaultStyle(String alias);
    public com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReferenceIF getDefaultStyle(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getForceRefresh();
    public com.runwaysdk.query.SelectableBoolean getForceRefresh(String alias);
    public com.runwaysdk.query.SelectableBoolean getForceRefresh(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getOid();
    public com.runwaysdk.query.SelectableChar getOid(String alias);
    public com.runwaysdk.query.SelectableChar getOid(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStructIF getLayerName();
    public com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStructIF getLayerName(String alias);
    public com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStructIF getLayerName(String alias, String displayLabel);
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getPublished();
    public com.runwaysdk.query.SelectableBoolean getPublished(String alias);
    public com.runwaysdk.query.SelectableBoolean getPublished(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReferenceIF getSqlBuilder();
    public com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReferenceIF getSqlBuilder(String alias);
    public com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReferenceIF getSqlBuilder(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(com.runwaysdk.system.gis.mapping.Layer layer);

    public com.runwaysdk.query.BasicCondition NE(com.runwaysdk.system.gis.mapping.Layer layer);


  public com.runwaysdk.query.Condition hasThematicAttribute();

  public com.runwaysdk.query.Condition hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery);

  public com.runwaysdk.query.Condition hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery, com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery);


  public com.runwaysdk.query.Condition SUBSELECT_hasThematicAttribute();

  public com.runwaysdk.query.Condition SUBSELECT_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery);

  public com.runwaysdk.query.Condition SUBSELECT_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery, com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery);


  public com.runwaysdk.query.Condition NOT_IN_hasThematicAttribute();

  public com.runwaysdk.query.Condition NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery);

  public com.runwaysdk.query.Condition NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery, com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_hasThematicAttribute();

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery, com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery);


  public com.runwaysdk.query.Condition containingMap();
  public com.runwaysdk.query.Condition containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery);

  public com.runwaysdk.query.Condition containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery, com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery);


  public com.runwaysdk.query.Condition SUBSELECT_containingMap();
  public com.runwaysdk.query.Condition SUBSELECT_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery);

  public com.runwaysdk.query.Condition SUBSELECT_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery, com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery);


  public com.runwaysdk.query.Condition NOT_IN_containingMap();
  public com.runwaysdk.query.Condition NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery);

  public com.runwaysdk.query.Condition NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery, com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_containingMap();
  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery, com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class LayerQueryReference extends com.runwaysdk.query.AttributeReference
 implements LayerQueryReferenceIF

  {

  public LayerQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(com.runwaysdk.system.gis.mapping.Layer layer)
    {
      if(layer == null) return this.EQ((java.lang.String)null);
      return this.EQ(layer.getOid());
    }

    public com.runwaysdk.query.BasicCondition NE(com.runwaysdk.system.gis.mapping.Layer layer)
    {
      if(layer == null) return this.NE((java.lang.String)null);
      return this.NE(layer.getOid());
    }

  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.gis.mapping.Layer.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.gis.mapping.Layer.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.system.gis.mapping.Layer.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.system.gis.mapping.Layer.CREATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReferenceIF getDefaultStyle()
  {
    return getDefaultStyle(null);

  }
 
  public com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReferenceIF getDefaultStyle(String alias)
  {
    return (com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReferenceIF)this.get(com.runwaysdk.system.gis.mapping.Layer.DEFAULTSTYLE, alias, null);

  }
 
  public com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReferenceIF getDefaultStyle(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReferenceIF)this.get(com.runwaysdk.system.gis.mapping.Layer.DEFAULTSTYLE,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(com.runwaysdk.system.gis.mapping.Layer.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(com.runwaysdk.system.gis.mapping.Layer.ENTITYDOMAIN,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getForceRefresh()
  {
    return getForceRefresh(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getForceRefresh(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.gis.mapping.Layer.FORCEREFRESH, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getForceRefresh(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.gis.mapping.Layer.FORCEREFRESH, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableChar getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.gis.mapping.Layer.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.gis.mapping.Layer.ID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.gis.mapping.Layer.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.gis.mapping.Layer.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.gis.mapping.Layer.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.system.gis.mapping.Layer.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.system.gis.mapping.Layer.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.system.gis.mapping.Layer.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStructIF getLayerName()
  {
    return getLayerName(null);

  }
 
  public com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStructIF getLayerName(String alias)
  {
    return (com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStructIF)this.attributeFactory(com.runwaysdk.system.gis.mapping.Layer.LAYERNAME, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStructIF getLayerName(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStructIF)this.attributeFactory(com.runwaysdk.system.gis.mapping.Layer.LAYERNAME, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.get(com.runwaysdk.system.gis.mapping.Layer.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.get(com.runwaysdk.system.gis.mapping.Layer.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(com.runwaysdk.system.gis.mapping.Layer.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(com.runwaysdk.system.gis.mapping.Layer.OWNER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getPublished()
  {
    return getPublished(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPublished(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.gis.mapping.Layer.PUBLISHED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPublished(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.gis.mapping.Layer.PUBLISHED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(com.runwaysdk.system.gis.mapping.Layer.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(com.runwaysdk.system.gis.mapping.Layer.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.gis.mapping.Layer.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.gis.mapping.Layer.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReferenceIF getSqlBuilder()
  {
    return getSqlBuilder(null);

  }
 
  public com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReferenceIF getSqlBuilder(String alias)
  {
    return (com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReferenceIF)this.get(com.runwaysdk.system.gis.mapping.Layer.SQLBUILDER, alias, null);

  }
 
  public com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReferenceIF getSqlBuilder(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReferenceIF)this.get(com.runwaysdk.system.gis.mapping.Layer.SQLBUILDER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.gis.mapping.Layer.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.gis.mapping.Layer.TYPE, alias, displayLabel);

  }

  public com.runwaysdk.query.Condition hasThematicAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);

    return this.isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_hasThematicAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition hasThematicAttribute(com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    return this.isParentIn(hasThematicAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_hasThematicAttribute(com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    return this.isParentIn_SUBSELECT(hasThematicAttributeQuery);
  }

  public com.runwaysdk.query.Condition hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(thematicAttributeQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(thematicAttributeQuery));

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery, com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    hasThematicAttributeQuery.AND(hasThematicAttributeQuery.hasChild(thematicAttributeQuery));
    return this.isParentIn(hasThematicAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery, com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    hasThematicAttributeQuery.AND(hasThematicAttributeQuery.hasChild(thematicAttributeQuery));
    return this.isParentIn_SUBSELECT(hasThematicAttributeQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_hasThematicAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_hasThematicAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    return this.isNotParentIn(hasThematicAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    return this.isNotParentIn_SUBSELECT(hasThematicAttributeQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(thematicAttributeQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasThematicAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(thematicAttributeQuery));

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery, com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    hasThematicAttributeQuery.AND(hasThematicAttributeQuery.hasChild(thematicAttributeQuery));
    return this.isNotParentIn(hasThematicAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_hasThematicAttribute(com.runwaysdk.system.gis.mapping.ThematicAttributeQuery thematicAttributeQuery, com.runwaysdk.system.gis.mapping.HasThematicAttributeQuery hasThematicAttributeQuery)
  {
    hasThematicAttributeQuery.AND(hasThematicAttributeQuery.hasChild(thematicAttributeQuery));
    return this.isNotParentIn_SUBSELECT(hasThematicAttributeQuery);
  }


  public com.runwaysdk.query.Condition containingMap()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);

    return this.isChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_containingMap()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition containingMap(com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    return this.isChildIn(hasLayerQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_containingMap(com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    return this.isChildIn_SUBSELECT(hasLayerQuery);
  }

  public com.runwaysdk.query.Condition containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(generatedMapQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(generatedMapQuery));

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery, com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    hasLayerQuery.AND(hasLayerQuery.hasParent(generatedMapQuery));
    return this.isChildIn(hasLayerQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery, com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    hasLayerQuery.AND(hasLayerQuery.hasParent(generatedMapQuery));
    return this.isChildIn_SUBSELECT(hasLayerQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_containingMap()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_containingMap()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    return this.isNotChildIn(hasLayerQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    return this.isNotChildIn_SUBSELECT(hasLayerQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(generatedMapQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.gis.mapping.HasLayer.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(generatedMapQuery));

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery, com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    hasLayerQuery.AND(hasLayerQuery.hasParent(generatedMapQuery));
    return this.isNotChildIn(hasLayerQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_containingMap(com.runwaysdk.system.gis.mapping.GeneratedMapQuery generatedMapQuery, com.runwaysdk.system.gis.mapping.HasLayerQuery hasLayerQuery)
  {
    hasLayerQuery.AND(hasLayerQuery.hasParent(generatedMapQuery));
    return this.isNotChildIn_SUBSELECT(hasLayerQuery);
  }

  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.gis.mapping.Layer.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.gis.mapping.Layer.DEFAULTSTYLE)) 
    {
       return new com.runwaysdk.system.gis.mapping.LayerStyleQuery.LayerStyleQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.gis.mapping.Layer.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.gis.mapping.Layer.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.gis.mapping.Layer.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.UsersQuery.UsersQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.gis.mapping.Layer.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.gis.mapping.Layer.SQLBUILDER)) 
    {
       return new com.runwaysdk.system.gis.mapping.LayerSQLBuilderQuery.LayerSQLBuilderQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.gis.mapping.Layer.LAYERNAME)) 
    {
       return new com.runwaysdk.system.gis.mapping.LayerLayerNameQuery.LayerLayerNameQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }
}
