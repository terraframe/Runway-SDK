package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = -1067471125)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to BackupReadException.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class BackupReadExceptionBase extends com.runwaysdk.business.SmartException
{
  public final static String CLASS = "com.runwaysdk.system.metadata.BackupReadException";
  public static java.lang.String LOCATION = "location";
  public static java.lang.String OID = "oid";
  @SuppressWarnings("unused")
  private static final long serialVersionUID = -1067471125;
  
  public BackupReadExceptionBase()
  {
    super();
  }
  
  public BackupReadExceptionBase(java.lang.String developerMessage)
  {
    super(developerMessage);
  }
  
  public BackupReadExceptionBase(java.lang.String developerMessage, java.lang.Throwable cause)
  {
    super(developerMessage, cause);
  }
  
  public BackupReadExceptionBase(java.lang.Throwable cause)
  {
    super(cause);
  }
  
  public String getLocation()
  {
    return getValue(LOCATION);
  }
  
  public void validateLocation()
  {
    this.validateAttribute(LOCATION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getLocationMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.BackupReadException.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(LOCATION);
  }
  
  public void setLocation(String value)
  {
    if(value == null)
    {
      setValue(LOCATION, "");
    }
    else
    {
      setValue(LOCATION, value);
    }
  }
  
  public String getOid()
  {
    return getValue(OID);
  }
  
  public void validateOid()
  {
    this.validateAttribute(OID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF getOidMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.BackupReadException.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF)mdClassIF.definesAttribute(OID);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public java.lang.String localize(java.util.Locale locale)
  {
    java.lang.String message = super.localize(locale);
    message = replace(message, "{location}", this.getLocation());
    message = replace(message, "{oid}", this.getOid());
    return message;
  }
  
}
