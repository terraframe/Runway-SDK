/**
 * Copyright (c) 2015 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK GIS(tm).
 *
 * Runway SDK GIS(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK GIS(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK GIS(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.localization.exception;

@com.runwaysdk.business.ClassSignature(hash = -2020292703)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to ExpectedColumnException.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class ExpectedColumnExceptionBase extends com.runwaysdk.business.SmartException
{
  public final static String CLASS = "com.runwaysdk.localization.exception.ExpectedColumnException";
  public static java.lang.String COLUMNNAME = "columnName";
  public static java.lang.String OID = "oid";
  public static java.lang.String SHEETNAME = "sheetName";
  private static final long serialVersionUID = -2020292703;
  
  public ExpectedColumnExceptionBase()
  {
    super();
  }
  
  public ExpectedColumnExceptionBase(java.lang.String developerMessage)
  {
    super(developerMessage);
  }
  
  public ExpectedColumnExceptionBase(java.lang.String developerMessage, java.lang.Throwable cause)
  {
    super(developerMessage, cause);
  }
  
  public ExpectedColumnExceptionBase(java.lang.Throwable cause)
  {
    super(cause);
  }
  
  public String getColumnName()
  {
    return getValue(COLUMNNAME);
  }
  
  public void validateColumnName()
  {
    this.validateAttribute(COLUMNNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getColumnNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.localization.exception.ExpectedColumnException.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(COLUMNNAME);
  }
  
  public void setColumnName(String value)
  {
    if(value == null)
    {
      setValue(COLUMNNAME, "");
    }
    else
    {
      setValue(COLUMNNAME, value);
    }
  }
  
  public String getOid()
  {
    return getValue(OID);
  }
  
  public void validateOid()
  {
    this.validateAttribute(OID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF getOidMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.localization.exception.ExpectedColumnException.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF)mdClassIF.definesAttribute(OID);
  }
  
  public String getSheetName()
  {
    return getValue(SHEETNAME);
  }
  
  public void validateSheetName()
  {
    this.validateAttribute(SHEETNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getSheetNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.localization.exception.ExpectedColumnException.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(SHEETNAME);
  }
  
  public void setSheetName(String value)
  {
    if(value == null)
    {
      setValue(SHEETNAME, "");
    }
    else
    {
      setValue(SHEETNAME, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public java.lang.String localize(java.util.Locale locale)
  {
    java.lang.String message = super.localize(locale);
    message = replace(message, "{columnName}", this.getColumnName());
    message = replace(message, "{oid}", this.getOid());
    message = replace(message, "{sheetName}", this.getSheetName());
    return message;
  }
  
}
