/**
 * Copyright (c) 2015 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system;

@com.runwaysdk.business.ClassSignature(hash = -636338056)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to Address.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class AddressBase extends com.runwaysdk.business.Struct
{
  public final static String CLASS = "com.runwaysdk.system.Address";
  public static java.lang.String CITY = "city";
  public static java.lang.String OID = "oid";
  public static java.lang.String KEYNAME = "keyName";
  public static java.lang.String POSTALCODE = "postalCode";
  public static java.lang.String PRIMARYADDRESS = "primaryAddress";
  public static java.lang.String SECONDARYADDRESS = "secondaryAddress";
  public static java.lang.String SITEMASTER = "siteMaster";
  public static java.lang.String ZIPCODE = "zipCode";
  private static final long serialVersionUID = -636338056;
  
  public AddressBase()
  {
    super();
  }
  
  public AddressBase(com.runwaysdk.business.MutableWithStructs component, String structName)
  {
    super(component, structName);
  }
  
  public static Address get(String oid)
  {
    return (Address) com.runwaysdk.business.Struct.get(oid);
  }
  
  public static Address getByKey(String key)
  {
    return (Address) com.runwaysdk.business.Struct.get(CLASS, key);
  }
  
  public String getCity()
  {
    return getValue(CITY);
  }
  
  public void validateCity()
  {
    this.validateAttribute(CITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getCityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.Address.CLASS);
    return mdClassIF.definesAttribute(CITY);
  }
  
  public void setCity(String value)
  {
    if(value == null)
    {
      setValue(CITY, "");
    }
    else
    {
      setValue(CITY, value);
    }
  }
  
  public String getOid()
  {
    return getValue(OID);
  }
  
  public void validateId()
  {
    this.validateAttribute(OID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getOidMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.Address.CLASS);
    return mdClassIF.definesAttribute(OID);
  }
  
  public String getKeyName()
  {
    return getValue(KEYNAME);
  }
  
  public void validateKeyName()
  {
    this.validateAttribute(KEYNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getKeyNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.Address.CLASS);
    return mdClassIF.definesAttribute(KEYNAME);
  }
  
  public void setKeyName(String value)
  {
    if(value == null)
    {
      setValue(KEYNAME, "");
    }
    else
    {
      setValue(KEYNAME, value);
    }
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<com.runwaysdk.system.AllPostalCodes> getPostalCode()
  {
    return (java.util.List<com.runwaysdk.system.AllPostalCodes>) getEnumValues(POSTALCODE);
  }
  
  public void addPostalCode(com.runwaysdk.system.AllPostalCodes value)
  {
    if(value != null)
    {
      addEnumItem(POSTALCODE, value.getOid());
    }
  }
  
  public void removePostalCode(com.runwaysdk.system.AllPostalCodes value)
  {
    if(value != null)
    {
      removeEnumItem(POSTALCODE, value.getOid());
    }
  }
  
  public void clearPostalCode()
  {
    clearEnum(POSTALCODE);
  }
  
  public void validatePostalCode()
  {
    this.validateAttribute(POSTALCODE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getPostalCodeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.Address.CLASS);
    return mdClassIF.definesAttribute(POSTALCODE);
  }
  
  public String getPrimaryAddress()
  {
    return getValue(PRIMARYADDRESS);
  }
  
  public void validatePrimaryAddress()
  {
    this.validateAttribute(PRIMARYADDRESS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getPrimaryAddressMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.Address.CLASS);
    return mdClassIF.definesAttribute(PRIMARYADDRESS);
  }
  
  public void setPrimaryAddress(String value)
  {
    if(value == null)
    {
      setValue(PRIMARYADDRESS, "");
    }
    else
    {
      setValue(PRIMARYADDRESS, value);
    }
  }
  
  public String getSecondaryAddress()
  {
    return getValue(SECONDARYADDRESS);
  }
  
  public void validateSecondaryAddress()
  {
    this.validateAttribute(SECONDARYADDRESS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getSecondaryAddressMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.Address.CLASS);
    return mdClassIF.definesAttribute(SECONDARYADDRESS);
  }
  
  public void setSecondaryAddress(String value)
  {
    if(value == null)
    {
      setValue(SECONDARYADDRESS, "");
    }
    else
    {
      setValue(SECONDARYADDRESS, value);
    }
  }
  
  public String getSiteMaster()
  {
    return getValue(SITEMASTER);
  }
  
  public void validateSiteMaster()
  {
    this.validateAttribute(SITEMASTER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getSiteMasterMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.Address.CLASS);
    return mdClassIF.definesAttribute(SITEMASTER);
  }
  
  public String getZipCode()
  {
    return getValue(ZIPCODE);
  }
  
  public void validateZipCode()
  {
    this.validateAttribute(ZIPCODE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getZipCodeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.Address.CLASS);
    return mdClassIF.definesAttribute(ZIPCODE);
  }
  
  public void setZipCode(String value)
  {
    if(value == null)
    {
      setValue(ZIPCODE, "");
    }
    else
    {
      setValue(ZIPCODE, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
