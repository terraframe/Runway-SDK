/**
 * Copyright (c) 2015 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system;

@com.runwaysdk.business.ClassSignature(hash = -1968737927)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to SingleActor.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class SingleActorBase extends com.runwaysdk.system.Actor
{
  public final static String CLASS = "com.runwaysdk.system.SingleActor";
  private static final long serialVersionUID = -1968737927;
  
  public SingleActorBase()
  {
    super();
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public com.runwaysdk.system.Assignments addAssignedRole(com.runwaysdk.system.Roles roles)
  {
    return (com.runwaysdk.system.Assignments) addChild(roles, com.runwaysdk.system.Assignments.CLASS);
  }
  
  public void removeAssignedRole(com.runwaysdk.system.Roles roles)
  {
    removeAllChildren(roles, com.runwaysdk.system.Assignments.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.Roles> getAllAssignedRole()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.Roles>) getChildren(com.runwaysdk.system.Assignments.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.Assignments> getAllAssignedRoleRel()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.Assignments>) getChildRelationships(com.runwaysdk.system.Assignments.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.system.Assignments getAssignedRoleRel(com.runwaysdk.system.Roles roles)
  {
    com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.Assignments> iterator = (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.Assignments>) getRelationshipsWithChild(roles, com.runwaysdk.system.Assignments.CLASS);
    try
    {
      if (iterator.hasNext())
      {
        return iterator.next();
      }
      else
      {
        return null;
      }
    }
    finally
    {
      iterator.close();
    }
  }
  
  public static SingleActor get(String oid)
  {
    return (SingleActor) com.runwaysdk.business.Business.get(oid);
  }
  
  public static SingleActor getByKey(String key)
  {
    return (SingleActor) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static SingleActor lock(java.lang.String oid)
  {
    SingleActor _instance = SingleActor.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static SingleActor unlock(java.lang.String oid)
  {
    SingleActor _instance = SingleActor.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
