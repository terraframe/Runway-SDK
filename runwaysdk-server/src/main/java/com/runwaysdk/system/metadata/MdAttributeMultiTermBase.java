package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = 817352664)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdAttributeMultiTerm.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MdAttributeMultiTermBase extends com.runwaysdk.system.metadata.MdAttributeMultiReference
{
  public final static String CLASS = "com.runwaysdk.system.metadata.MdAttributeMultiTerm";
  private static final long serialVersionUID = 817352664;
  
  public MdAttributeMultiTermBase()
  {
    super();
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public com.runwaysdk.system.gis.geo.GeoEntityMultiTermAttributeRoot addGeoEntityMultiTermAttributeRoots(com.runwaysdk.system.gis.geo.GeoEntity geoEntity)
  {
    return (com.runwaysdk.system.gis.geo.GeoEntityMultiTermAttributeRoot) addChild(geoEntity, com.runwaysdk.system.gis.geo.GeoEntityMultiTermAttributeRoot.CLASS);
  }
  
  public void removeGeoEntityMultiTermAttributeRoots(com.runwaysdk.system.gis.geo.GeoEntity geoEntity)
  {
    removeAllChildren(geoEntity, com.runwaysdk.system.gis.geo.GeoEntityMultiTermAttributeRoot.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.GeoEntity> getAllGeoEntityMultiTermAttributeRoots()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.GeoEntity>) getChildren(com.runwaysdk.system.gis.geo.GeoEntityMultiTermAttributeRoot.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.GeoEntityMultiTermAttributeRoot> getAllGeoEntityMultiTermAttributeRootsRel()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.GeoEntityMultiTermAttributeRoot>) getChildRelationships(com.runwaysdk.system.gis.geo.GeoEntityMultiTermAttributeRoot.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.GeoEntityMultiTermAttributeRoot> getGeoEntityMultiTermAttributeRootsRel(com.runwaysdk.system.gis.geo.GeoEntity geoEntity)
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.GeoEntityMultiTermAttributeRoot>) getRelationshipsWithChild(geoEntity, com.runwaysdk.system.gis.geo.GeoEntityMultiTermAttributeRoot.CLASS);
  }
  
  public com.runwaysdk.system.gis.geo.SynonymMultiTermAttributeRoot addSynonymMultiTermAttributeRoots(com.runwaysdk.system.gis.geo.Synonym synonym)
  {
    return (com.runwaysdk.system.gis.geo.SynonymMultiTermAttributeRoot) addChild(synonym, com.runwaysdk.system.gis.geo.SynonymMultiTermAttributeRoot.CLASS);
  }
  
  public void removeSynonymMultiTermAttributeRoots(com.runwaysdk.system.gis.geo.Synonym synonym)
  {
    removeAllChildren(synonym, com.runwaysdk.system.gis.geo.SynonymMultiTermAttributeRoot.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.Synonym> getAllSynonymMultiTermAttributeRoots()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.Synonym>) getChildren(com.runwaysdk.system.gis.geo.SynonymMultiTermAttributeRoot.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.SynonymMultiTermAttributeRoot> getAllSynonymMultiTermAttributeRootsRel()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.SynonymMultiTermAttributeRoot>) getChildRelationships(com.runwaysdk.system.gis.geo.SynonymMultiTermAttributeRoot.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.SynonymMultiTermAttributeRoot> getSynonymMultiTermAttributeRootsRel(com.runwaysdk.system.gis.geo.Synonym synonym)
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.SynonymMultiTermAttributeRoot>) getRelationshipsWithChild(synonym, com.runwaysdk.system.gis.geo.SynonymMultiTermAttributeRoot.CLASS);
  }
  
  public com.runwaysdk.system.gis.geo.UniversalMultiTermAttributeRoot addUniversalMultiTermAttributeRoots(com.runwaysdk.system.gis.geo.Universal universal)
  {
    return (com.runwaysdk.system.gis.geo.UniversalMultiTermAttributeRoot) addChild(universal, com.runwaysdk.system.gis.geo.UniversalMultiTermAttributeRoot.CLASS);
  }
  
  public void removeUniversalMultiTermAttributeRoots(com.runwaysdk.system.gis.geo.Universal universal)
  {
    removeAllChildren(universal, com.runwaysdk.system.gis.geo.UniversalMultiTermAttributeRoot.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.Universal> getAllUniversalMultiTermAttributeRoots()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.Universal>) getChildren(com.runwaysdk.system.gis.geo.UniversalMultiTermAttributeRoot.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.UniversalMultiTermAttributeRoot> getAllUniversalMultiTermAttributeRootsRel()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.UniversalMultiTermAttributeRoot>) getChildRelationships(com.runwaysdk.system.gis.geo.UniversalMultiTermAttributeRoot.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.UniversalMultiTermAttributeRoot> getUniversalMultiTermAttributeRootsRel(com.runwaysdk.system.gis.geo.Universal universal)
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.gis.geo.UniversalMultiTermAttributeRoot>) getRelationshipsWithChild(universal, com.runwaysdk.system.gis.geo.UniversalMultiTermAttributeRoot.CLASS);
  }
  
  public static MdAttributeMultiTerm get(String oid)
  {
    return (MdAttributeMultiTerm) com.runwaysdk.business.Business.get(oid);
  }
  
  public static MdAttributeMultiTerm getByKey(String key)
  {
    return (MdAttributeMultiTerm) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MdAttributeMultiTerm lock(java.lang.String oid)
  {
    MdAttributeMultiTerm _instance = MdAttributeMultiTerm.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static MdAttributeMultiTerm unlock(java.lang.String oid)
  {
    MdAttributeMultiTerm _instance = MdAttributeMultiTerm.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
