/**
 * Copyright (c) 2022 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system;

@com.runwaysdk.business.ClassSignature(hash = -1173541668)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to EmailKey.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class EmailKeyBase extends com.runwaysdk.business.Struct
{
  public final static String CLASS = "com.runwaysdk.system.EmailKey";
  public static java.lang.String EMAIL = "email";
  public static java.lang.String OID = "oid";
  public static java.lang.String ISSUEDONDATE = "issuedOnDate";
  public static java.lang.String KEYNAME = "keyName";
  public static java.lang.String SITEMASTER = "siteMaster";
  public static java.lang.String UNIQUEKEY = "uniqueKey";
  private static final long serialVersionUID = -1173541668;
  
  public EmailKeyBase()
  {
    super();
  }
  
  public EmailKeyBase(com.runwaysdk.business.MutableWithStructs component, String structName)
  {
    super(component, structName);
  }
  
  public static EmailKey get(String oid)
  {
    return (EmailKey) com.runwaysdk.business.Struct.get(oid);
  }
  
  public static EmailKey getByKey(String key)
  {
    return (EmailKey) com.runwaysdk.business.Struct.get(CLASS, key);
  }
  
  public String getEmail()
  {
    return getValue(EMAIL);
  }
  
  protected void validateEmail()
  {
    this.validateAttribute(EMAIL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getEmailMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.EmailKey.CLASS);
    return mdClassIF.definesAttribute(EMAIL);
  }
  
  protected void setEmail(String value)
  {
    if(value == null)
    {
      setValue(EMAIL, "");
    }
    else
    {
      setValue(EMAIL, value);
    }
  }
  
  public String getOid()
  {
    return getValue(OID);
  }
  
  public void validateId()
  {
    this.validateAttribute(OID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getOidMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.EmailKey.CLASS);
    return mdClassIF.definesAttribute(OID);
  }
  
  public java.util.Date getIssuedOnDate()
  {
    return com.runwaysdk.constants.MdAttributeDateTimeUtil.getTypeSafeValue(getValue(ISSUEDONDATE));
  }
  
  protected void validateIssuedOnDate()
  {
    this.validateAttribute(ISSUEDONDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getIssuedOnDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.EmailKey.CLASS);
    return mdClassIF.definesAttribute(ISSUEDONDATE);
  }
  
  protected void setIssuedOnDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(ISSUEDONDATE, "");
    }
    else
    {
      setValue(ISSUEDONDATE, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATETIME_FORMAT).format(value));
    }
  }
  
  public String getKeyName()
  {
    return getValue(KEYNAME);
  }
  
  public void validateKeyName()
  {
    this.validateAttribute(KEYNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getKeyNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.EmailKey.CLASS);
    return mdClassIF.definesAttribute(KEYNAME);
  }
  
  public void setKeyName(String value)
  {
    if(value == null)
    {
      setValue(KEYNAME, "");
    }
    else
    {
      setValue(KEYNAME, value);
    }
  }
  
  public String getSiteMaster()
  {
    return getValue(SITEMASTER);
  }
  
  public void validateSiteMaster()
  {
    this.validateAttribute(SITEMASTER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getSiteMasterMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.EmailKey.CLASS);
    return mdClassIF.definesAttribute(SITEMASTER);
  }
  
  public String getUniqueKey()
  {
    return getValue(UNIQUEKEY);
  }
  
  protected void validateUniqueKey()
  {
    this.validateAttribute(UNIQUEKEY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getUniqueKeyMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.EmailKey.CLASS);
    return mdClassIF.definesAttribute(UNIQUEKEY);
  }
  
  protected void setUniqueKey(String value)
  {
    if(value == null)
    {
      setValue(UNIQUEKEY, "");
    }
    else
    {
      setValue(UNIQUEKEY, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
