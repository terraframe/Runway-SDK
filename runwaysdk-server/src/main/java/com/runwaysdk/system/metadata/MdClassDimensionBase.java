/**
 * Copyright (c) 2022 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = 1017625751)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdClassDimension.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MdClassDimensionBase extends com.runwaysdk.system.metadata.Metadata
{
  public final static String CLASS = "com.runwaysdk.system.metadata.MdClassDimension";
  public final static java.lang.String DEFININGMDCLASS = "definingMdClass";
  public final static java.lang.String DEFININGMDDIMENSION = "definingMdDimension";
  private static final long serialVersionUID = 1017625751;
  
  public MdClassDimensionBase()
  {
    super();
  }
  
  public com.runwaysdk.system.metadata.MdClass getDefiningMdClass()
  {
    if (getValue(DEFININGMDCLASS).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdClass.get(getValue(DEFININGMDCLASS));
    }
  }
  
  public String getDefiningMdClassId()
  {
    return getValue(DEFININGMDCLASS);
  }
  
  public void validateDefiningMdClass()
  {
    this.validateAttribute(DEFININGMDCLASS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getDefiningMdClassMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdClassDimension.CLASS);
    return mdClassIF.definesAttribute(DEFININGMDCLASS);
  }
  
  public void setDefiningMdClass(com.runwaysdk.system.metadata.MdClass value)
  {
    if(value == null)
    {
      setValue(DEFININGMDCLASS, "");
    }
    else
    {
      setValue(DEFININGMDCLASS, value.getOid());
    }
  }
  
  public com.runwaysdk.system.metadata.MdDimension getDefiningMdDimension()
  {
    if (getValue(DEFININGMDDIMENSION).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdDimension.get(getValue(DEFININGMDDIMENSION));
    }
  }
  
  public String getDefiningMdDimensionId()
  {
    return getValue(DEFININGMDDIMENSION);
  }
  
  public void validateDefiningMdDimension()
  {
    this.validateAttribute(DEFININGMDDIMENSION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getDefiningMdDimensionMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdClassDimension.CLASS);
    return mdClassIF.definesAttribute(DEFININGMDDIMENSION);
  }
  
  public void setDefiningMdDimension(com.runwaysdk.system.metadata.MdDimension value)
  {
    if(value == null)
    {
      setValue(DEFININGMDDIMENSION, "");
    }
    else
    {
      setValue(DEFININGMDDIMENSION, value.getOid());
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public com.runwaysdk.system.metadata.ClassHasDimension addMdClasses(com.runwaysdk.system.metadata.MdClass mdClass)
  {
    return (com.runwaysdk.system.metadata.ClassHasDimension) addParent(mdClass, com.runwaysdk.system.metadata.ClassHasDimension.CLASS);
  }
  
  public void removeMdClasses(com.runwaysdk.system.metadata.MdClass mdClass)
  {
    removeAllParents(mdClass, com.runwaysdk.system.metadata.ClassHasDimension.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdClass> getAllMdClasses()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdClass>) getParents(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.ClassHasDimension> getAllMdClassesRel()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.ClassHasDimension>) getParentRelationships(com.runwaysdk.system.metadata.ClassHasDimension.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.system.metadata.ClassHasDimension getMdClassesRel(com.runwaysdk.system.metadata.MdClass mdClass)
  {
    com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.ClassHasDimension> iterator = (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.ClassHasDimension>) getRelationshipsWithParent(mdClass, com.runwaysdk.system.metadata.ClassHasDimension.CLASS);
    try
    {
      if (iterator.hasNext())
      {
        return iterator.next();
      }
      else
      {
        return null;
      }
    }
    finally
    {
      iterator.close();
    }
  }
  
  public com.runwaysdk.system.metadata.DimensionHasClass addMdDimensions(com.runwaysdk.system.metadata.MdDimension mdDimension)
  {
    return (com.runwaysdk.system.metadata.DimensionHasClass) addParent(mdDimension, com.runwaysdk.system.metadata.DimensionHasClass.CLASS);
  }
  
  public void removeMdDimensions(com.runwaysdk.system.metadata.MdDimension mdDimension)
  {
    removeAllParents(mdDimension, com.runwaysdk.system.metadata.DimensionHasClass.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdDimension> getAllMdDimensions()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.MdDimension>) getParents(com.runwaysdk.system.metadata.DimensionHasClass.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.DimensionHasClass> getAllMdDimensionsRel()
  {
    return (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.DimensionHasClass>) getParentRelationships(com.runwaysdk.system.metadata.DimensionHasClass.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.runwaysdk.system.metadata.DimensionHasClass getMdDimensionsRel(com.runwaysdk.system.metadata.MdDimension mdDimension)
  {
    com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.DimensionHasClass> iterator = (com.runwaysdk.query.OIterator<? extends com.runwaysdk.system.metadata.DimensionHasClass>) getRelationshipsWithParent(mdDimension, com.runwaysdk.system.metadata.DimensionHasClass.CLASS);
    try
    {
      if (iterator.hasNext())
      {
        return iterator.next();
      }
      else
      {
        return null;
      }
    }
    finally
    {
      iterator.close();
    }
  }
  
  public static MdClassDimension get(String oid)
  {
    return (MdClassDimension) com.runwaysdk.business.Business.get(oid);
  }
  
  public static MdClassDimension getByKey(String key)
  {
    return (MdClassDimension) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MdClassDimension lock(java.lang.String oid)
  {
    MdClassDimension _instance = MdClassDimension.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static MdClassDimension unlock(java.lang.String oid)
  {
    MdClassDimension _instance = MdClassDimension.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
