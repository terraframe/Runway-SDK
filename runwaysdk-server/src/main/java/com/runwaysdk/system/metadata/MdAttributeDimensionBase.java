/**
 * Copyright (c) 2022 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = -2042228184)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdAttributeDimension.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MdAttributeDimensionBase extends com.runwaysdk.system.metadata.Metadata
{
  public final static String CLASS = "com.runwaysdk.system.metadata.MdAttributeDimension";
  public static java.lang.String DEFAULTVALUE = "defaultValue";
  public static java.lang.String DEFININGMDATTRIBUTE = "definingMdAttribute";
  public static java.lang.String DEFININGMDDIMENSION = "definingMdDimension";
  public static java.lang.String REQUIRED = "required";
  private static final long serialVersionUID = -2042228184;
  
  public MdAttributeDimensionBase()
  {
    super();
  }
  
  public String getDefaultValue()
  {
    return getValue(DEFAULTVALUE);
  }
  
  public void validateDefaultValue()
  {
    this.validateAttribute(DEFAULTVALUE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getDefaultValueMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdAttributeDimension.CLASS);
    return mdClassIF.definesAttribute(DEFAULTVALUE);
  }
  
  public void setDefaultValue(String value)
  {
    if(value == null)
    {
      setValue(DEFAULTVALUE, "");
    }
    else
    {
      setValue(DEFAULTVALUE, value);
    }
  }
  
  public com.runwaysdk.system.metadata.MdAttribute getDefiningMdAttribute()
  {
    if (getValue(DEFININGMDATTRIBUTE).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdAttribute.get(getValue(DEFININGMDATTRIBUTE));
    }
  }
  
  public String getDefiningMdAttributeId()
  {
    return getValue(DEFININGMDATTRIBUTE);
  }
  
  public void validateDefiningMdAttribute()
  {
    this.validateAttribute(DEFININGMDATTRIBUTE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getDefiningMdAttributeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdAttributeDimension.CLASS);
    return mdClassIF.definesAttribute(DEFININGMDATTRIBUTE);
  }
  
  public void setDefiningMdAttribute(com.runwaysdk.system.metadata.MdAttribute value)
  {
    if(value == null)
    {
      setValue(DEFININGMDATTRIBUTE, "");
    }
    else
    {
      setValue(DEFININGMDATTRIBUTE, value.getOid());
    }
  }
  
  public com.runwaysdk.system.metadata.MdDimension getDefiningMdDimension()
  {
    if (getValue(DEFININGMDDIMENSION).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdDimension.get(getValue(DEFININGMDDIMENSION));
    }
  }
  
  public String getDefiningMdDimensionId()
  {
    return getValue(DEFININGMDDIMENSION);
  }
  
  public void validateDefiningMdDimension()
  {
    this.validateAttribute(DEFININGMDDIMENSION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getDefiningMdDimensionMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdAttributeDimension.CLASS);
    return mdClassIF.definesAttribute(DEFININGMDDIMENSION);
  }
  
  public void setDefiningMdDimension(com.runwaysdk.system.metadata.MdDimension value)
  {
    if(value == null)
    {
      setValue(DEFININGMDDIMENSION, "");
    }
    else
    {
      setValue(DEFININGMDDIMENSION, value.getOid());
    }
  }
  
  public Boolean getRequired()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(REQUIRED));
  }
  
  public void validateRequired()
  {
    this.validateAttribute(REQUIRED);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getRequiredMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdAttributeDimension.CLASS);
    return mdClassIF.definesAttribute(REQUIRED);
  }
  
  public void setRequired(Boolean value)
  {
    if(value == null)
    {
      setValue(REQUIRED, "");
    }
    else
    {
      setValue(REQUIRED, java.lang.Boolean.toString(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static MdAttributeDimension get(String oid)
  {
    return (MdAttributeDimension) com.runwaysdk.business.Business.get(oid);
  }
  
  public static MdAttributeDimension getByKey(String key)
  {
    return (MdAttributeDimension) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MdAttributeDimension lock(java.lang.String oid)
  {
    MdAttributeDimension _instance = MdAttributeDimension.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static MdAttributeDimension unlock(java.lang.String oid)
  {
    MdAttributeDimension _instance = MdAttributeDimension.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
