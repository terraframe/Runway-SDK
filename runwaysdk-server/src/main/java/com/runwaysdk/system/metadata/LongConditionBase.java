/**
 * Copyright (c) 2015 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = -53787375)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to LongCondition.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class LongConditionBase extends com.runwaysdk.system.metadata.FieldCondition
{
  public final static String CLASS = "com.runwaysdk.system.metadata.LongCondition";
  public static java.lang.String DEFININGMDFIELD = "definingMdField";
  public static java.lang.String OPERATION = "operation";
  public static java.lang.String VALUE = "value";
  private static final long serialVersionUID = -53787375;
  
  public LongConditionBase()
  {
    super();
  }
  
  public com.runwaysdk.system.metadata.MdField getDefiningMdField()
  {
    if (getValue(DEFININGMDFIELD).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdField.get(getValue(DEFININGMDFIELD));
    }
  }
  
  public String getDefiningMdFieldId()
  {
    return getValue(DEFININGMDFIELD);
  }
  
  public void validateDefiningMdField()
  {
    this.validateAttribute(DEFININGMDFIELD);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getDefiningMdFieldMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.LongCondition.CLASS);
    return mdClassIF.definesAttribute(DEFININGMDFIELD);
  }
  
  public void setDefiningMdField(com.runwaysdk.system.metadata.MdField value)
  {
    if(value == null)
    {
      setValue(DEFININGMDFIELD, "");
    }
    else
    {
      setValue(DEFININGMDFIELD, value.getOid());
    }
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<com.runwaysdk.system.AllOperation> getOperation()
  {
    return (java.util.List<com.runwaysdk.system.AllOperation>) getEnumValues(OPERATION);
  }
  
  public void addOperation(com.runwaysdk.system.AllOperation value)
  {
    if(value != null)
    {
      addEnumItem(OPERATION, value.getOid());
    }
  }
  
  public void removeOperation(com.runwaysdk.system.AllOperation value)
  {
    if(value != null)
    {
      removeEnumItem(OPERATION, value.getOid());
    }
  }
  
  public void clearOperation()
  {
    clearEnum(OPERATION);
  }
  
  public void validateOperation()
  {
    this.validateAttribute(OPERATION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getOperationMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.LongCondition.CLASS);
    return mdClassIF.definesAttribute(OPERATION);
  }
  
  public Long getValue()
  {
    return com.runwaysdk.constants.MdAttributeLongUtil.getTypeSafeValue(getValue(VALUE));
  }
  
  public void validateValue()
  {
    this.validateAttribute(VALUE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getValueMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.LongCondition.CLASS);
    return mdClassIF.definesAttribute(VALUE);
  }
  
  public void setValue(Long value)
  {
    if(value == null)
    {
      setValue(VALUE, "");
    }
    else
    {
      setValue(VALUE, java.lang.Long.toString(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static LongCondition get(String oid)
  {
    return (LongCondition) com.runwaysdk.business.Business.get(oid);
  }
  
  public static LongCondition getByKey(String key)
  {
    return (LongCondition) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static LongCondition lock(java.lang.String oid)
  {
    LongCondition _instance = LongCondition.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static LongCondition unlock(java.lang.String oid)
  {
    LongCondition _instance = LongCondition.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
