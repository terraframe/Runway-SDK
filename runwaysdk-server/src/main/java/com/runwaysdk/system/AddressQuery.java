/**
 * Copyright (c) 2015 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system;

@com.runwaysdk.business.ClassSignature(hash = 1872044193)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to Address.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class AddressQuery extends com.runwaysdk.query.GeneratedStructQuery
{

  public AddressQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.StructQuery structQuery = componentQueryFactory.structQuery(this.getClassType());

       this.setStructQuery(structQuery);
    }
  }

  public AddressQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.StructQuery structQuery = new com.runwaysdk.business.StructQuery(valueQuery, this.getClassType());

       this.setStructQuery(structQuery);
    }
  }

  public String getClassType()
  {
    return com.runwaysdk.system.Address.CLASS;
  }
  public com.runwaysdk.query.SelectableChar getCity()
  {
    return getCity(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCity(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.Address.CITY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCity(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.Address.CITY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableChar getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.Address.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.Address.ID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.Address.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.Address.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQueryIF getPostalCode()
  {
    return getPostalCode(null);

  }
 
  public com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQueryIF getPostalCode(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.Address.POSTALCODE);

    return (com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQueryIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.Address.POSTALCODE, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQueryIF getPostalCode(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.Address.POSTALCODE);

    return (com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQueryIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.Address.POSTALCODE, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getPrimaryAddress()
  {
    return getPrimaryAddress(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPrimaryAddress(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.Address.PRIMARYADDRESS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPrimaryAddress(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.Address.PRIMARYADDRESS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSecondaryAddress()
  {
    return getSecondaryAddress(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSecondaryAddress(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.Address.SECONDARYADDRESS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSecondaryAddress(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.Address.SECONDARYADDRESS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.Address.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.Address.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getZipCode()
  {
    return getZipCode(null);

  }
 
  public com.runwaysdk.query.SelectableChar getZipCode(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.Address.ZIPCODE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getZipCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.Address.ZIPCODE, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeEnumeration enumerationFactory( com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.Address.POSTALCODE)) 
    {
       return new com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends Address> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.StructIterator<Address>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a struct attribute.
 **/
  public interface AddressQueryStructIF extends com.runwaysdk.query.SelectableStruct  {

    public com.runwaysdk.query.SelectableChar getCity();
    public com.runwaysdk.query.SelectableChar getCity(String alias);
    public com.runwaysdk.query.SelectableChar getCity(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getOid();
    public com.runwaysdk.query.SelectableChar getOid(String alias);
    public com.runwaysdk.query.SelectableChar getOid(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
  public com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQueryIF getPostalCode();
  public com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQueryIF getPostalCode(String alias);
  public com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQueryIF getPostalCode(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getPrimaryAddress();
    public com.runwaysdk.query.SelectableChar getPrimaryAddress(String alias);
    public com.runwaysdk.query.SelectableChar getPrimaryAddress(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSecondaryAddress();
    public com.runwaysdk.query.SelectableChar getSecondaryAddress(String alias);
    public com.runwaysdk.query.SelectableChar getSecondaryAddress(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getZipCode();
    public com.runwaysdk.query.SelectableChar getZipCode(String alias);
    public com.runwaysdk.query.SelectableChar getZipCode(String alias, String displayLabel);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a struct attribute.
 **/
  public static class AddressQueryStruct extends com.runwaysdk.query.AttributeStruct implements AddressQueryStructIF  {

  public AddressQueryStruct(com.runwaysdk.dataaccess.MdAttributeStructDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdStructDAOIF mdStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdStructIF, structTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }

  public com.runwaysdk.query.SelectableChar getCity()
  {
    return getCity(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCity(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.Address.CITY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCity(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.Address.CITY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableChar getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.Address.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.Address.ID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.Address.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.Address.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQueryIF getPostalCode()
  {
    return getPostalCode(null);

  }
 
  public com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQueryIF getPostalCode(String alias)
  {
    return (com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQueryIF)this.get(com.runwaysdk.system.Address.POSTALCODE, alias, null);

  }
 
  public com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQueryIF getPostalCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQueryIF)this.get(com.runwaysdk.system.Address.POSTALCODE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getPrimaryAddress()
  {
    return getPrimaryAddress(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPrimaryAddress(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.Address.PRIMARYADDRESS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPrimaryAddress(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.Address.PRIMARYADDRESS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSecondaryAddress()
  {
    return getSecondaryAddress(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSecondaryAddress(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.Address.SECONDARYADDRESS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSecondaryAddress(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.Address.SECONDARYADDRESS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.Address.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.Address.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getZipCode()
  {
    return getZipCode(null);

  }
 
  public com.runwaysdk.query.SelectableChar getZipCode(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.Address.ZIPCODE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getZipCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.Address.ZIPCODE, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeEnumeration enumerationFactory( com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.Address.POSTALCODE)) 
    {
       return new com.runwaysdk.system.PostalCodeQuery.AllPostalCodesQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }
}
