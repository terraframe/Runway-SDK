/**
 * Copyright (c) 2022 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = 767464347)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdAttributeBoolean.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MdAttributeBooleanBase extends com.runwaysdk.system.metadata.MdAttributePrimitive
{
  public final static String CLASS = "com.runwaysdk.system.metadata.MdAttributeBoolean";
  public final static java.lang.String DEFAULTVALUE = "defaultValue";
  public final static java.lang.String NEGATIVEDISPLAYLABEL = "negativeDisplayLabel";
  private com.runwaysdk.business.Struct negativeDisplayLabel = null;
  
  public final static java.lang.String POSITIVEDISPLAYLABEL = "positiveDisplayLabel";
  private com.runwaysdk.business.Struct positiveDisplayLabel = null;
  
  private static final long serialVersionUID = 767464347;
  
  public MdAttributeBooleanBase()
  {
    super();
    negativeDisplayLabel = super.getStruct("negativeDisplayLabel");
    positiveDisplayLabel = super.getStruct("positiveDisplayLabel");
  }
  
  public Boolean getDefaultValue()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(DEFAULTVALUE));
  }
  
  public void validateDefaultValue()
  {
    this.validateAttribute(DEFAULTVALUE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getDefaultValueMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdAttributeBoolean.CLASS);
    return mdClassIF.definesAttribute(DEFAULTVALUE);
  }
  
  public void setDefaultValue(Boolean value)
  {
    if(value == null)
    {
      setValue(DEFAULTVALUE, "");
    }
    else
    {
      setValue(DEFAULTVALUE, java.lang.Boolean.toString(value));
    }
  }
  
  public com.runwaysdk.system.metadata.MetadataDisplayLabel getNegativeDisplayLabel()
  {
    return (com.runwaysdk.system.metadata.MetadataDisplayLabel) negativeDisplayLabel;
  }
  
  public void validateNegativeDisplayLabel()
  {
    this.validateAttribute(NEGATIVEDISPLAYLABEL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNegativeDisplayLabelMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdAttributeBoolean.CLASS);
    return mdClassIF.definesAttribute(NEGATIVEDISPLAYLABEL);
  }
  
  public com.runwaysdk.system.metadata.MetadataDisplayLabel getPositiveDisplayLabel()
  {
    return (com.runwaysdk.system.metadata.MetadataDisplayLabel) positiveDisplayLabel;
  }
  
  public void validatePositiveDisplayLabel()
  {
    this.validateAttribute(POSITIVEDISPLAYLABEL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getPositiveDisplayLabelMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(com.runwaysdk.system.metadata.MdAttributeBoolean.CLASS);
    return mdClassIF.definesAttribute(POSITIVEDISPLAYLABEL);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static MdAttributeBoolean get(String oid)
  {
    return (MdAttributeBoolean) com.runwaysdk.business.Business.get(oid);
  }
  
  public static MdAttributeBoolean getByKey(String key)
  {
    return (MdAttributeBoolean) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MdAttributeBoolean lock(java.lang.String oid)
  {
    MdAttributeBoolean _instance = MdAttributeBoolean.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static MdAttributeBoolean unlock(java.lang.String oid)
  {
    MdAttributeBoolean _instance = MdAttributeBoolean.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
