/**
 * Copyright (c) 2015 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.system.metadata;

@com.runwaysdk.business.ClassSignature(hash = -731986539)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdAttributeConcrete.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class MdAttributeConcreteQuery extends com.runwaysdk.system.metadata.MdAttributeQuery

{

  public MdAttributeConcreteQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public MdAttributeConcreteQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
    super(valueQuery);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return com.runwaysdk.system.metadata.MdAttributeConcrete.CLASS;
  }
  public com.runwaysdk.query.SelectableChar getAttributeName()
  {
    return getAttributeName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAttributeName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdAttributeConcrete.ATTRIBUTENAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAttributeName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdAttributeConcrete.ATTRIBUTENAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getColumnName()
  {
    return getColumnName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getColumnName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdAttributeConcrete.COLUMNNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getColumnName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdAttributeConcrete.COLUMNNAME, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass()
  {
    return getDefiningMdClass(null);

  }
 
  public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.metadata.MdAttributeConcrete.DEFININGMDCLASS);

    return (com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.metadata.MdAttributeConcrete.DEFININGMDCLASS, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.metadata.MdAttributeConcrete.DEFININGMDCLASS);

    return (com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.metadata.MdAttributeConcrete.DEFININGMDCLASS, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.metadata.MdAttributeConcrete.DISPLAYLABEL);

    return (com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.metadata.MdAttributeConcrete.DISPLAYLABEL, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.metadata.MdAttributeConcrete.DISPLAYLABEL);

    return (com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.metadata.MdAttributeConcrete.DISPLAYLABEL, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getGenerateAccessor()
  {
    return getGenerateAccessor(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getGenerateAccessor(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdAttributeConcrete.GENERATEACCESSOR, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getGenerateAccessor(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdAttributeConcrete.GENERATEACCESSOR, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility()
  {
    return getGetterVisibility(null);

  }
 
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.metadata.MdAttributeConcrete.GETTERVISIBILITY);

    return (com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.metadata.MdAttributeConcrete.GETTERVISIBILITY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.metadata.MdAttributeConcrete.GETTERVISIBILITY);

    return (com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.metadata.MdAttributeConcrete.GETTERVISIBILITY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getImmutable()
  {
    return getImmutable(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getImmutable(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdAttributeConcrete.IMMUTABLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getImmutable(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdAttributeConcrete.IMMUTABLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getIndexName()
  {
    return getIndexName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getIndexName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getIndexName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXNAME, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType()
  {
    return getIndexType(null);

  }
 
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXTYPE);

    return (com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXTYPE, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXTYPE);

    return (com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXTYPE, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getRequired()
  {
    return getRequired(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRequired(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdAttributeConcrete.REQUIRED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRequired(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdAttributeConcrete.REQUIRED, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility()
  {
    return getSetterVisibility(null);

  }
 
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.metadata.MdAttributeConcrete.SETTERVISIBILITY);

    return (com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.metadata.MdAttributeConcrete.SETTERVISIBILITY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.system.metadata.MdAttributeConcrete.SETTERVISIBILITY);

    return (com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.system.metadata.MdAttributeConcrete.SETTERVISIBILITY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getSystem()
  {
    return getSystem(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getSystem(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdAttributeConcrete.SYSTEM, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getSystem(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.system.metadata.MdAttributeConcrete.SYSTEM, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.DEFININGMDCLASS)) 
    {
       return new com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.DISPLAYLABEL)) 
    {
       return new com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.localFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeEnumeration enumerationFactory( com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.GETTERVISIBILITY)) 
    {
       return new com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXTYPE)) 
    {
       return new com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.SETTERVISIBILITY)) 
    {
       return new com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.enumerationFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends MdAttributeConcrete> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<MdAttributeConcrete>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


  public com.runwaysdk.query.Condition definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.getBusinessQuery().isChildIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.getBusinessQuery().isChildIn_SUBSELECT(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasParent(mdClassQuery));
    return this.getBusinessQuery().isChildIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasParent(mdClassQuery));
    return this.getBusinessQuery().isChildIn_SUBSELECT(classAttributeConcreteQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.getBusinessQuery().isNotChildIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasParent(mdClassQuery));
    return this.getBusinessQuery().isNotChildIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasParent(mdClassQuery));
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(classAttributeConcreteQuery);
  }


  public com.runwaysdk.query.Condition index()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_index()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition index(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.getBusinessQuery().isChildIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_index(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.getBusinessQuery().isChildIn_SUBSELECT(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdIndexQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdIndexQuery));

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasParent(mdIndexQuery));
    return this.getBusinessQuery().isChildIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasParent(mdIndexQuery));
    return this.getBusinessQuery().isChildIn_SUBSELECT(indexAttributeQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_index()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_index()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_index(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.getBusinessQuery().isNotChildIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_index(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdIndexQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdIndexQuery));

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasParent(mdIndexQuery));
    return this.getBusinessQuery().isNotChildIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasParent(mdIndexQuery));
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(indexAttributeQuery);
  }


  public com.runwaysdk.query.Condition getMdDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_getMdDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition getMdDimension(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    return this.getBusinessQuery().isChildIn(dimensionDefinesLocalStructAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_getMdDimension(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    return this.getBusinessQuery().isChildIn_SUBSELECT(dimensionDefinesLocalStructAttributeQuery);
  }

  public com.runwaysdk.query.Condition getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdDimensionQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdDimensionQuery));

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    dimensionDefinesLocalStructAttributeQuery.AND(dimensionDefinesLocalStructAttributeQuery.hasParent(mdDimensionQuery));
    return this.getBusinessQuery().isChildIn(dimensionDefinesLocalStructAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    dimensionDefinesLocalStructAttributeQuery.AND(dimensionDefinesLocalStructAttributeQuery.hasParent(mdDimensionQuery));
    return this.getBusinessQuery().isChildIn_SUBSELECT(dimensionDefinesLocalStructAttributeQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_getMdDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_getMdDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_getMdDimension(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    return this.getBusinessQuery().isNotChildIn(dimensionDefinesLocalStructAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_getMdDimension(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(dimensionDefinesLocalStructAttributeQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdDimensionQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdDimensionQuery));

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    dimensionDefinesLocalStructAttributeQuery.AND(dimensionDefinesLocalStructAttributeQuery.hasParent(mdDimensionQuery));
    return this.getBusinessQuery().isNotChildIn(dimensionDefinesLocalStructAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    dimensionDefinesLocalStructAttributeQuery.AND(dimensionDefinesLocalStructAttributeQuery.hasParent(mdDimensionQuery));
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(dimensionDefinesLocalStructAttributeQuery);
  }


  public com.runwaysdk.query.Condition virtualAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_virtualAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition virtualAttribute(com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    return this.getBusinessQuery().isParentIn(virtualizeAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_virtualAttribute(com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    return this.getBusinessQuery().isParentIn_SUBSELECT(virtualizeAttributeQuery);
  }

  public com.runwaysdk.query.Condition virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeVirtualQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeVirtualQuery));

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery, com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    virtualizeAttributeQuery.AND(virtualizeAttributeQuery.hasChild(mdAttributeVirtualQuery));
    return this.getBusinessQuery().isParentIn(virtualizeAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery, com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    virtualizeAttributeQuery.AND(virtualizeAttributeQuery.hasChild(mdAttributeVirtualQuery));
    return this.getBusinessQuery().isParentIn_SUBSELECT(virtualizeAttributeQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_virtualAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_virtualAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    return this.getBusinessQuery().isNotParentIn(virtualizeAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(virtualizeAttributeQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeVirtualQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeVirtualQuery));

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery, com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    virtualizeAttributeQuery.AND(virtualizeAttributeQuery.hasChild(mdAttributeVirtualQuery));
    return this.getBusinessQuery().isNotParentIn(virtualizeAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery, com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    virtualizeAttributeQuery.AND(virtualizeAttributeQuery.hasChild(mdAttributeVirtualQuery));
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(virtualizeAttributeQuery);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface MdAttributeConcreteQueryReferenceIF extends com.runwaysdk.system.metadata.MdAttributeQuery.MdAttributeQueryReferenceIF
  {

    public com.runwaysdk.query.SelectableChar getAttributeName();
    public com.runwaysdk.query.SelectableChar getAttributeName(String alias);
    public com.runwaysdk.query.SelectableChar getAttributeName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getColumnName();
    public com.runwaysdk.query.SelectableChar getColumnName(String alias);
    public com.runwaysdk.query.SelectableChar getColumnName(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass();
    public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass(String alias);
    public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel();
    public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias);
    public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getGenerateAccessor();
    public com.runwaysdk.query.SelectableBoolean getGenerateAccessor(String alias);
    public com.runwaysdk.query.SelectableBoolean getGenerateAccessor(String alias, String displayLabel);
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility();
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility(String alias);
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getImmutable();
    public com.runwaysdk.query.SelectableBoolean getImmutable(String alias);
    public com.runwaysdk.query.SelectableBoolean getImmutable(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getIndexName();
    public com.runwaysdk.query.SelectableChar getIndexName(String alias);
    public com.runwaysdk.query.SelectableChar getIndexName(String alias, String displayLabel);
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType();
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType(String alias);
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getRequired();
    public com.runwaysdk.query.SelectableBoolean getRequired(String alias);
    public com.runwaysdk.query.SelectableBoolean getRequired(String alias, String displayLabel);
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility();
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility(String alias);
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getSystem();
    public com.runwaysdk.query.SelectableBoolean getSystem(String alias);
    public com.runwaysdk.query.SelectableBoolean getSystem(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(com.runwaysdk.system.metadata.MdAttributeConcrete mdAttributeConcrete);

    public com.runwaysdk.query.BasicCondition NE(com.runwaysdk.system.metadata.MdAttributeConcrete mdAttributeConcrete);


  public com.runwaysdk.query.Condition virtualAttribute();

  public com.runwaysdk.query.Condition virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery);

  public com.runwaysdk.query.Condition virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery, com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery);


  public com.runwaysdk.query.Condition SUBSELECT_virtualAttribute();

  public com.runwaysdk.query.Condition SUBSELECT_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery);

  public com.runwaysdk.query.Condition SUBSELECT_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery, com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery);


  public com.runwaysdk.query.Condition NOT_IN_virtualAttribute();

  public com.runwaysdk.query.Condition NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery);

  public com.runwaysdk.query.Condition NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery, com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_virtualAttribute();

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery, com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery);


  public com.runwaysdk.query.Condition definingClass();
  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery);


  public com.runwaysdk.query.Condition SUBSELECT_definingClass();
  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery);


  public com.runwaysdk.query.Condition index();
  public com.runwaysdk.query.Condition index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery);

  public com.runwaysdk.query.Condition index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery);


  public com.runwaysdk.query.Condition SUBSELECT_index();
  public com.runwaysdk.query.Condition SUBSELECT_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery);

  public com.runwaysdk.query.Condition SUBSELECT_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery);


  public com.runwaysdk.query.Condition getMdDimension();
  public com.runwaysdk.query.Condition getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery);

  public com.runwaysdk.query.Condition getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery);


  public com.runwaysdk.query.Condition SUBSELECT_getMdDimension();
  public com.runwaysdk.query.Condition SUBSELECT_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery);

  public com.runwaysdk.query.Condition SUBSELECT_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery);


  public com.runwaysdk.query.Condition NOT_IN_definingClass();
  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass();
  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery);


  public com.runwaysdk.query.Condition NOT_IN_index();
  public com.runwaysdk.query.Condition NOT_IN_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery);

  public com.runwaysdk.query.Condition NOT_IN_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_index();
  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery);


  public com.runwaysdk.query.Condition NOT_IN_getMdDimension();
  public com.runwaysdk.query.Condition NOT_IN_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery);

  public com.runwaysdk.query.Condition NOT_IN_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_getMdDimension();
  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class MdAttributeConcreteQueryReference extends com.runwaysdk.system.metadata.MdAttributeQuery.MdAttributeQueryReference
 implements MdAttributeConcreteQueryReferenceIF

  {

  public MdAttributeConcreteQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(com.runwaysdk.system.metadata.MdAttributeConcrete mdAttributeConcrete)
    {
      if(mdAttributeConcrete == null) return this.EQ((java.lang.String)null);
      return this.EQ(mdAttributeConcrete.getOid());
    }

    public com.runwaysdk.query.BasicCondition NE(com.runwaysdk.system.metadata.MdAttributeConcrete mdAttributeConcrete)
    {
      if(mdAttributeConcrete == null) return this.NE((java.lang.String)null);
      return this.NE(mdAttributeConcrete.getOid());
    }

  public com.runwaysdk.query.SelectableChar getAttributeName()
  {
    return getAttributeName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAttributeName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.ATTRIBUTENAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAttributeName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.ATTRIBUTENAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getColumnName()
  {
    return getColumnName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getColumnName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.COLUMNNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getColumnName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.COLUMNNAME, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass()
  {
    return getDefiningMdClass(null);

  }
 
  public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass(String alias)
  {
    return (com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.DEFININGMDCLASS, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.DEFININGMDCLASS,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {
    return (com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF)this.attributeFactory(com.runwaysdk.system.metadata.MdAttributeConcrete.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF)this.attributeFactory(com.runwaysdk.system.metadata.MdAttributeConcrete.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getGenerateAccessor()
  {
    return getGenerateAccessor(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getGenerateAccessor(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.GENERATEACCESSOR, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getGenerateAccessor(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.GENERATEACCESSOR, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility()
  {
    return getGetterVisibility(null);

  }
 
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility(String alias)
  {
    return (com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.GETTERVISIBILITY, alias, null);

  }
 
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.GETTERVISIBILITY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getImmutable()
  {
    return getImmutable(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getImmutable(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.IMMUTABLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getImmutable(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.IMMUTABLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getIndexName()
  {
    return getIndexName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getIndexName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getIndexName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXNAME, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType()
  {
    return getIndexType(null);

  }
 
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType(String alias)
  {
    return (com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXTYPE, alias, null);

  }
 
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXTYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getRequired()
  {
    return getRequired(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRequired(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.REQUIRED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRequired(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.REQUIRED, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility()
  {
    return getSetterVisibility(null);

  }
 
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility(String alias)
  {
    return (com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.SETTERVISIBILITY, alias, null);

  }
 
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.SETTERVISIBILITY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getSystem()
  {
    return getSystem(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getSystem(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.SYSTEM, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getSystem(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.SYSTEM, alias, displayLabel);

  }

  public com.runwaysdk.query.Condition virtualAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);

    return this.isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_virtualAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition virtualAttribute(com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    return this.isParentIn(virtualizeAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_virtualAttribute(com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    return this.isParentIn_SUBSELECT(virtualizeAttributeQuery);
  }

  public com.runwaysdk.query.Condition virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeVirtualQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeVirtualQuery));

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery, com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    virtualizeAttributeQuery.AND(virtualizeAttributeQuery.hasChild(mdAttributeVirtualQuery));
    return this.isParentIn(virtualizeAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery, com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    virtualizeAttributeQuery.AND(virtualizeAttributeQuery.hasChild(mdAttributeVirtualQuery));
    return this.isParentIn_SUBSELECT(virtualizeAttributeQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_virtualAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_virtualAttribute()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    return this.isNotParentIn(virtualizeAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    return this.isNotParentIn_SUBSELECT(virtualizeAttributeQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeVirtualQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.VirtualizeAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(mdAttributeVirtualQuery));

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery, com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    virtualizeAttributeQuery.AND(virtualizeAttributeQuery.hasChild(mdAttributeVirtualQuery));
    return this.isNotParentIn(virtualizeAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_virtualAttribute(com.runwaysdk.system.metadata.MdAttributeVirtualQuery mdAttributeVirtualQuery, com.runwaysdk.system.metadata.VirtualizeAttributeQuery virtualizeAttributeQuery)
  {
    virtualizeAttributeQuery.AND(virtualizeAttributeQuery.hasChild(mdAttributeVirtualQuery));
    return this.isNotParentIn_SUBSELECT(virtualizeAttributeQuery);
  }


  public com.runwaysdk.query.Condition definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.isChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.isChildIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.isChildIn_SUBSELECT(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasParent(mdClassQuery));
    return this.isChildIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasParent(mdClassQuery));
    return this.isChildIn_SUBSELECT(classAttributeConcreteQuery);
  }


  public com.runwaysdk.query.Condition index()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.isChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_index()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition index(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.isChildIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_index(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.isChildIn_SUBSELECT(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdIndexQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdIndexQuery));

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasParent(mdIndexQuery));
    return this.isChildIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasParent(mdIndexQuery));
    return this.isChildIn_SUBSELECT(indexAttributeQuery);
  }


  public com.runwaysdk.query.Condition getMdDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);

    return this.isChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_getMdDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition getMdDimension(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    return this.isChildIn(dimensionDefinesLocalStructAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_getMdDimension(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    return this.isChildIn_SUBSELECT(dimensionDefinesLocalStructAttributeQuery);
  }

  public com.runwaysdk.query.Condition getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdDimensionQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdDimensionQuery));

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    dimensionDefinesLocalStructAttributeQuery.AND(dimensionDefinesLocalStructAttributeQuery.hasParent(mdDimensionQuery));
    return this.isChildIn(dimensionDefinesLocalStructAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    dimensionDefinesLocalStructAttributeQuery.AND(dimensionDefinesLocalStructAttributeQuery.hasParent(mdDimensionQuery));
    return this.isChildIn_SUBSELECT(dimensionDefinesLocalStructAttributeQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.isNotChildIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    return this.isNotChildIn_SUBSELECT(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.ClassAttributeConcrete.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdClassQuery));

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasParent(mdClassQuery));
    return this.isNotChildIn(classAttributeConcreteQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_definingClass(com.runwaysdk.system.metadata.MdClassQuery mdClassQuery, com.runwaysdk.system.metadata.ClassAttributeConcreteQuery classAttributeConcreteQuery)
  {
    classAttributeConcreteQuery.AND(classAttributeConcreteQuery.hasParent(mdClassQuery));
    return this.isNotChildIn_SUBSELECT(classAttributeConcreteQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_index()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_index()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_index(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.isNotChildIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_index(com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    return this.isNotChildIn_SUBSELECT(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdIndexQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.IndexAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdIndexQuery));

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasParent(mdIndexQuery));
    return this.isNotChildIn(indexAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_index(com.runwaysdk.system.metadata.MdIndexQuery mdIndexQuery, com.runwaysdk.system.metadata.IndexAttributeQuery indexAttributeQuery)
  {
    indexAttributeQuery.AND(indexAttributeQuery.hasParent(mdIndexQuery));
    return this.isNotChildIn_SUBSELECT(indexAttributeQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_getMdDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_getMdDimension()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_getMdDimension(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    return this.isNotChildIn(dimensionDefinesLocalStructAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_getMdDimension(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    return this.isNotChildIn_SUBSELECT(dimensionDefinesLocalStructAttributeQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdDimensionQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttribute.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(mdDimensionQuery));

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    dimensionDefinesLocalStructAttributeQuery.AND(dimensionDefinesLocalStructAttributeQuery.hasParent(mdDimensionQuery));
    return this.isNotChildIn(dimensionDefinesLocalStructAttributeQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_getMdDimension(com.runwaysdk.system.metadata.MdDimensionQuery mdDimensionQuery, com.runwaysdk.system.metadata.DimensionDefinesLocalStructAttributeQuery dimensionDefinesLocalStructAttributeQuery)
  {
    dimensionDefinesLocalStructAttributeQuery.AND(dimensionDefinesLocalStructAttributeQuery.hasParent(mdDimensionQuery));
    return this.isNotChildIn_SUBSELECT(dimensionDefinesLocalStructAttributeQuery);
  }

  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.DEFININGMDCLASS)) 
    {
       return new com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.DISPLAYLABEL)) 
    {
       return new com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.localFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeEnumeration enumerationFactory( com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.GETTERVISIBILITY)) 
    {
       return new com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXTYPE)) 
    {
       return new com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.SETTERVISIBILITY)) 
    {
       return new com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.enumerationFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface MdAttributeConcreteQueryMultiReferenceIF extends com.runwaysdk.system.metadata.MdAttributeQuery.MdAttributeQueryMultiReferenceIF
  {

    public com.runwaysdk.query.SelectableChar getAttributeName();
    public com.runwaysdk.query.SelectableChar getAttributeName(String alias);
    public com.runwaysdk.query.SelectableChar getAttributeName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getColumnName();
    public com.runwaysdk.query.SelectableChar getColumnName(String alias);
    public com.runwaysdk.query.SelectableChar getColumnName(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass();
    public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass(String alias);
    public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel();
    public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias);
    public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getGenerateAccessor();
    public com.runwaysdk.query.SelectableBoolean getGenerateAccessor(String alias);
    public com.runwaysdk.query.SelectableBoolean getGenerateAccessor(String alias, String displayLabel);
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility();
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility(String alias);
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getImmutable();
    public com.runwaysdk.query.SelectableBoolean getImmutable(String alias);
    public com.runwaysdk.query.SelectableBoolean getImmutable(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getIndexName();
    public com.runwaysdk.query.SelectableChar getIndexName(String alias);
    public com.runwaysdk.query.SelectableChar getIndexName(String alias, String displayLabel);
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType();
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType(String alias);
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getRequired();
    public com.runwaysdk.query.SelectableBoolean getRequired(String alias);
    public com.runwaysdk.query.SelectableBoolean getRequired(String alias, String displayLabel);
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility();
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility(String alias);
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getSystem();
    public com.runwaysdk.query.SelectableBoolean getSystem(String alias);
    public com.runwaysdk.query.SelectableBoolean getSystem(String alias, String displayLabel);

    public com.runwaysdk.query.Condition containsAny(com.runwaysdk.system.metadata.MdAttributeConcrete ... mdAttributeConcrete);
    public com.runwaysdk.query.Condition notContainsAny(com.runwaysdk.system.metadata.MdAttributeConcrete ... mdAttributeConcrete);
    public com.runwaysdk.query.Condition containsAll(com.runwaysdk.system.metadata.MdAttributeConcrete ... mdAttributeConcrete);
    public com.runwaysdk.query.Condition notContainsAll(com.runwaysdk.system.metadata.MdAttributeConcrete ... mdAttributeConcrete);
    public com.runwaysdk.query.Condition containsExactly(com.runwaysdk.system.metadata.MdAttributeConcrete ... mdAttributeConcrete);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class MdAttributeConcreteQueryMultiReference extends com.runwaysdk.system.metadata.MdAttributeQuery.MdAttributeQueryMultiReference
 implements MdAttributeConcreteQueryMultiReferenceIF

  {

  public MdAttributeConcreteQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(com.runwaysdk.system.metadata.MdAttributeConcrete ... mdAttributeConcrete)  {

      String[] itemIdArray = new String[mdAttributeConcrete.length]; 

      for (int i=0; i<mdAttributeConcrete.length; i++)
      {
        itemIdArray[i] = mdAttributeConcrete[i].getOid();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(com.runwaysdk.system.metadata.MdAttributeConcrete ... mdAttributeConcrete)  {

      String[] itemIdArray = new String[mdAttributeConcrete.length]; 

      for (int i=0; i<mdAttributeConcrete.length; i++)
      {
        itemIdArray[i] = mdAttributeConcrete[i].getOid();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(com.runwaysdk.system.metadata.MdAttributeConcrete ... mdAttributeConcrete)  {

      String[] itemIdArray = new String[mdAttributeConcrete.length]; 

      for (int i=0; i<mdAttributeConcrete.length; i++)
      {
        itemIdArray[i] = mdAttributeConcrete[i].getOid();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(com.runwaysdk.system.metadata.MdAttributeConcrete ... mdAttributeConcrete)  {

      String[] itemIdArray = new String[mdAttributeConcrete.length]; 

      for (int i=0; i<mdAttributeConcrete.length; i++)
      {
        itemIdArray[i] = mdAttributeConcrete[i].getOid();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(com.runwaysdk.system.metadata.MdAttributeConcrete ... mdAttributeConcrete)  {

      String[] itemIdArray = new String[mdAttributeConcrete.length]; 

      for (int i=0; i<mdAttributeConcrete.length; i++)
      {
        itemIdArray[i] = mdAttributeConcrete[i].getOid();
      }

      return this.containsExactly(itemIdArray);
  }
  public com.runwaysdk.query.SelectableChar getAttributeName()
  {
    return getAttributeName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAttributeName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.ATTRIBUTENAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAttributeName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.ATTRIBUTENAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getColumnName()
  {
    return getColumnName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getColumnName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.COLUMNNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getColumnName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.COLUMNNAME, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass()
  {
    return getDefiningMdClass(null);

  }
 
  public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass(String alias)
  {
    return (com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.DEFININGMDCLASS, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF getDefiningMdClass(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReferenceIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.DEFININGMDCLASS,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {
    return (com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF)this.attributeFactory(com.runwaysdk.system.metadata.MdAttributeConcrete.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStructIF)this.attributeFactory(com.runwaysdk.system.metadata.MdAttributeConcrete.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getGenerateAccessor()
  {
    return getGenerateAccessor(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getGenerateAccessor(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.GENERATEACCESSOR, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getGenerateAccessor(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.GENERATEACCESSOR, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility()
  {
    return getGetterVisibility(null);

  }
 
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility(String alias)
  {
    return (com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.GETTERVISIBILITY, alias, null);

  }
 
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getGetterVisibility(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.GETTERVISIBILITY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getImmutable()
  {
    return getImmutable(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getImmutable(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.IMMUTABLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getImmutable(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.IMMUTABLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getIndexName()
  {
    return getIndexName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getIndexName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getIndexName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXNAME, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType()
  {
    return getIndexType(null);

  }
 
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType(String alias)
  {
    return (com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXTYPE, alias, null);

  }
 
  public com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF getIndexType(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQueryIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXTYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getRequired()
  {
    return getRequired(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRequired(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.REQUIRED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getRequired(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.REQUIRED, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility()
  {
    return getSetterVisibility(null);

  }
 
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility(String alias)
  {
    return (com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.SETTERVISIBILITY, alias, null);

  }
 
  public com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF getSetterVisibility(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQueryIF)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.SETTERVISIBILITY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getSystem()
  {
    return getSystem(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getSystem(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.SYSTEM, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getSystem(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.system.metadata.MdAttributeConcrete.SYSTEM, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.DEFININGMDCLASS)) 
    {
       return new com.runwaysdk.system.metadata.MdClassQuery.MdClassQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.DISPLAYLABEL)) 
    {
       return new com.runwaysdk.system.metadata.MetadataDisplayLabelQuery.MetadataDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.localFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeEnumeration enumerationFactory( com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.GETTERVISIBILITY)) 
    {
       return new com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.INDEXTYPE)) 
    {
       return new com.runwaysdk.system.metadata.IndexTypesQuery.MdAttributeIndicesQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.system.metadata.MdAttributeConcrete.SETTERVISIBILITY)) 
    {
       return new com.runwaysdk.system.metadata.VisibilityModifierMasterQuery.VisibilityModifierQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.enumerationFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  }
}
