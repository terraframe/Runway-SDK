/**
 * Copyright (c) 2015 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Runway SDK(tm).
 *
 * Runway SDK(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Runway SDK(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package com.runwaysdk.jstest;

@com.runwaysdk.business.ClassSignature(hash = -537065038)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to TestClass.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class TestClassQuery extends com.runwaysdk.query.GeneratedBusinessQuery
 implements com.runwaysdk.generation.loader.
{
private static final long serialVersionUID = -537065038;

  public TestClassQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public TestClassQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return com.runwaysdk.jstest.TestClass.CLASS;
  }
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getCellPhone()
  {
    return getCellPhone(null);

  }
 
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getCellPhone(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.CELLPHONE);

    return (com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.CELLPHONE, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getCellPhone(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.CELLPHONE);

    return (com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.CELLPHONE, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.CREATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.CREATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.ENTITYDOMAIN, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.ENTITYDOMAIN, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getHomePhone()
  {
    return getHomePhone(null);

  }
 
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getHomePhone(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.HOMEPHONE);

    return (com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.HOMEPHONE, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getHomePhone(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.HOMEPHONE);

    return (com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.HOMEPHONE, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableChar getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.OID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.OID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.LASTUPDATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.LASTUPDATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.LOCKEDBY);

    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.LOCKEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.LOCKEDBY);

    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.LOCKEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getMultipleState()
  {
    return getMultipleState(null);

  }
 
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getMultipleState(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.MULTIPLESTATE);

    return (com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.MULTIPLESTATE, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getMultipleState(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.MULTIPLESTATE);

    return (com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.MULTIPLESTATE, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.OWNER, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.OWNER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getSingleState()
  {
    return getSingleState(null);

  }
 
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getSingleState(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.SINGLESTATE);

    return (com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.SINGLESTATE, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getSingleState(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.SINGLESTATE);

    return (com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.SINGLESTATE, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBlob getTestBlob()
  {
    return getTestBlob(null);

  }
 
  public com.runwaysdk.query.SelectableBlob getTestBlob(String alias)
  {
    return (com.runwaysdk.query.SelectableBlob)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTBLOB, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBlob getTestBlob(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBlob)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTBLOB, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getTestBoolean()
  {
    return getTestBoolean(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getTestBoolean(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTBOOLEAN, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getTestBoolean(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTBOOLEAN, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getTestCharacter()
  {
    return getTestCharacter(null);

  }
 
  public com.runwaysdk.query.SelectableChar getTestCharacter(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTCHARACTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getTestCharacter(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTCHARACTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getTestDate()
  {
    return getTestDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getTestDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getTestDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getTestDateTime()
  {
    return getTestDateTime(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getTestDateTime(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTDATETIME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getTestDateTime(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTDATETIME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableDecimal getTestDecimal()
  {
    return getTestDecimal(null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getTestDecimal(String alias)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTDECIMAL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getTestDecimal(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTDECIMAL, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableDouble getTestDouble()
  {
    return getTestDouble(null);

  }
 
  public com.runwaysdk.query.SelectableDouble getTestDouble(String alias)
  {
    return (com.runwaysdk.query.SelectableDouble)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTDOUBLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableDouble getTestDouble(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableDouble)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTDOUBLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableFloat getTestFloat()
  {
    return getTestFloat(null);

  }
 
  public com.runwaysdk.query.SelectableFloat getTestFloat(String alias)
  {
    return (com.runwaysdk.query.SelectableFloat)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTFLOAT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableFloat getTestFloat(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableFloat)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTFLOAT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getTestInteger()
  {
    return getTestInteger(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getTestInteger(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTINTEGER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getTestInteger(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTINTEGER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getTestLong()
  {
    return getTestLong(null);

  }
 
  public com.runwaysdk.query.SelectableLong getTestLong(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTLONG, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getTestLong(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTLONG, alias, displayLabel);

  }
  public com.runwaysdk.jstest.RefClassQuery.RefClassQueryReferenceIF getTestReferenceObject()
  {
    return getTestReferenceObject(null);

  }
 
  public com.runwaysdk.jstest.RefClassQuery.RefClassQueryReferenceIF getTestReferenceObject(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.TESTREFERENCEOBJECT);

    return (com.runwaysdk.jstest.RefClassQuery.RefClassQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.TESTREFERENCEOBJECT, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.jstest.RefClassQuery.RefClassQueryReferenceIF getTestReferenceObject(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.TESTREFERENCEOBJECT);

    return (com.runwaysdk.jstest.RefClassQuery.RefClassQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.TESTREFERENCEOBJECT, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getTestText()
  {
    return getTestText(null);

  }
 
  public com.runwaysdk.query.SelectableChar getTestText(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTTEXT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getTestText(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTTEXT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getTestTime()
  {
    return getTestTime(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getTestTime(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTTIME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getTestTime(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TESTTIME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(com.runwaysdk.jstest.TestClass.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getWorkPhone()
  {
    return getWorkPhone(null);

  }
 
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getWorkPhone(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.WORKPHONE);

    return (com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.WORKPHONE, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getWorkPhone(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(com.runwaysdk.jstest.TestClass.WORKPHONE);

    return (com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF)this.getComponentQuery().internalAttributeFactory(com.runwaysdk.jstest.TestClass.WORKPHONE, mdAttributeIF, this, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.jstest.TestClass.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.UsersQuery.UsersQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.TESTREFERENCEOBJECT)) 
    {
       return new com.runwaysdk.jstest.RefClassQuery.RefClassQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeStruct structFactory( com.runwaysdk.dataaccess.MdAttributeStructDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdStructDAOIF mdStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.jstest.TestClass.CELLPHONE)) 
    {
       return new com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStruct((com.runwaysdk.dataaccess.MdAttributeStructDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.HOMEPHONE)) 
    {
       return new com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStruct((com.runwaysdk.dataaccess.MdAttributeStructDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.WORKPHONE)) 
    {
       return new com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStruct((com.runwaysdk.dataaccess.MdAttributeStructDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeEnumeration enumerationFactory( com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.jstest.TestClass.MULTIPLESTATE)) 
    {
       return new com.runwaysdk.jstest.StateEnumQuery.StatesQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.SINGLESTATE)) 
    {
       return new com.runwaysdk.jstest.StateEnumQuery.StatesQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends TestClass> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<TestClass>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


  public com.runwaysdk.query.Condition refClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_refClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition refClass(com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    return this.getBusinessQuery().isParentIn(befriendsQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_refClass(com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    return this.getBusinessQuery().isParentIn_SUBSELECT(befriendsQuery);
  }

  public com.runwaysdk.query.Condition refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(refClassQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(refClassQuery));

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery, com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    befriendsQuery.AND(befriendsQuery.hasChild(refClassQuery));
    return this.getBusinessQuery().isParentIn(befriendsQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery, com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    befriendsQuery.AND(befriendsQuery.hasChild(refClassQuery));
    return this.getBusinessQuery().isParentIn_SUBSELECT(befriendsQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_refClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_refClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_refClass(com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    return this.getBusinessQuery().isNotParentIn(befriendsQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_refClass(com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(befriendsQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(refClassQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(refClassQuery));

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery, com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    befriendsQuery.AND(befriendsQuery.hasChild(refClassQuery));
    return this.getBusinessQuery().isNotParentIn(befriendsQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery, com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    befriendsQuery.AND(befriendsQuery.hasChild(refClassQuery));
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(befriendsQuery);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface TestClassQueryReferenceIF extends com.runwaysdk.generation.loader., com.runwaysdk.query.SelectableReference
  {

    public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getCellPhone();
    public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getCellPhone(String alias);
    public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getCellPhone(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getHomePhone();
    public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getHomePhone(String alias);
    public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getHomePhone(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getOid();
    public com.runwaysdk.query.SelectableChar getOid(String alias);
    public com.runwaysdk.query.SelectableChar getOid(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel);
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getMultipleState();
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getMultipleState(String alias);
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getMultipleState(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getSingleState();
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getSingleState(String alias);
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getSingleState(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBlob getTestBlob();
    public com.runwaysdk.query.SelectableBlob getTestBlob(String alias);
    public com.runwaysdk.query.SelectableBlob getTestBlob(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getTestBoolean();
    public com.runwaysdk.query.SelectableBoolean getTestBoolean(String alias);
    public com.runwaysdk.query.SelectableBoolean getTestBoolean(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getTestCharacter();
    public com.runwaysdk.query.SelectableChar getTestCharacter(String alias);
    public com.runwaysdk.query.SelectableChar getTestCharacter(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getTestDate();
    public com.runwaysdk.query.SelectableMoment getTestDate(String alias);
    public com.runwaysdk.query.SelectableMoment getTestDate(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getTestDateTime();
    public com.runwaysdk.query.SelectableMoment getTestDateTime(String alias);
    public com.runwaysdk.query.SelectableMoment getTestDateTime(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableDecimal getTestDecimal();
    public com.runwaysdk.query.SelectableDecimal getTestDecimal(String alias);
    public com.runwaysdk.query.SelectableDecimal getTestDecimal(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableDouble getTestDouble();
    public com.runwaysdk.query.SelectableDouble getTestDouble(String alias);
    public com.runwaysdk.query.SelectableDouble getTestDouble(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableFloat getTestFloat();
    public com.runwaysdk.query.SelectableFloat getTestFloat(String alias);
    public com.runwaysdk.query.SelectableFloat getTestFloat(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getTestInteger();
    public com.runwaysdk.query.SelectableInteger getTestInteger(String alias);
    public com.runwaysdk.query.SelectableInteger getTestInteger(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getTestLong();
    public com.runwaysdk.query.SelectableLong getTestLong(String alias);
    public com.runwaysdk.query.SelectableLong getTestLong(String alias, String displayLabel);
    public com.runwaysdk.jstest.RefClassQuery.RefClassQueryReferenceIF getTestReferenceObject();
    public com.runwaysdk.jstest.RefClassQuery.RefClassQueryReferenceIF getTestReferenceObject(String alias);
    public com.runwaysdk.jstest.RefClassQuery.RefClassQueryReferenceIF getTestReferenceObject(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getTestText();
    public com.runwaysdk.query.SelectableChar getTestText(String alias);
    public com.runwaysdk.query.SelectableChar getTestText(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getTestTime();
    public com.runwaysdk.query.SelectableMoment getTestTime(String alias);
    public com.runwaysdk.query.SelectableMoment getTestTime(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getWorkPhone();
    public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getWorkPhone(String alias);
    public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getWorkPhone(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(com.runwaysdk.jstest.TestClass testClass);

    public com.runwaysdk.query.BasicCondition NE(com.runwaysdk.jstest.TestClass testClass);


  public com.runwaysdk.query.Condition refClass();

  public com.runwaysdk.query.Condition refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery);

  public com.runwaysdk.query.Condition refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery, com.runwaysdk.jstest.BefriendsQuery befriendsQuery);


  public com.runwaysdk.query.Condition SUBSELECT_refClass();

  public com.runwaysdk.query.Condition SUBSELECT_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery);

  public com.runwaysdk.query.Condition SUBSELECT_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery, com.runwaysdk.jstest.BefriendsQuery befriendsQuery);


  public com.runwaysdk.query.Condition NOT_IN_refClass();

  public com.runwaysdk.query.Condition NOT_IN_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery);

  public com.runwaysdk.query.Condition NOT_IN_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery, com.runwaysdk.jstest.BefriendsQuery befriendsQuery);


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_refClass();

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery);

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery, com.runwaysdk.jstest.BefriendsQuery befriendsQuery);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class TestClassQueryReference extends com.runwaysdk.query.AttributeReference
 implements TestClassQueryReferenceIF
, com.runwaysdk.generation.loader.
  {
private static final long serialVersionUID = 1294579792;

  public TestClassQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(com.runwaysdk.jstest.TestClass testClass)
    {
      if(testClass == null) return this.EQ((java.lang.String)null);
      return this.EQ(testClass.getOid());
    }

    public com.runwaysdk.query.BasicCondition NE(com.runwaysdk.jstest.TestClass testClass)
    {
      if(testClass == null) return this.NE((java.lang.String)null);
      return this.NE(testClass.getOid());
    }

  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getCellPhone()
  {
    return getCellPhone(null);

  }
 
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getCellPhone(String alias)
  {
    return (com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF)this.attributeFactory(com.runwaysdk.jstest.TestClass.CELLPHONE, com.runwaysdk.system.metadata.MdAttributeStruct.CLASS, alias, null);

  }
 
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getCellPhone(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF)this.attributeFactory(com.runwaysdk.jstest.TestClass.CELLPHONE, com.runwaysdk.system.metadata.MdAttributeStruct.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.jstest.TestClass.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.jstest.TestClass.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.jstest.TestClass.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.jstest.TestClass.CREATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(com.runwaysdk.jstest.TestClass.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(com.runwaysdk.jstest.TestClass.ENTITYDOMAIN,  alias, displayLabel);

  }
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getHomePhone()
  {
    return getHomePhone(null);

  }
 
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getHomePhone(String alias)
  {
    return (com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF)this.attributeFactory(com.runwaysdk.jstest.TestClass.HOMEPHONE, com.runwaysdk.system.metadata.MdAttributeStruct.CLASS, alias, null);

  }
 
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getHomePhone(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF)this.attributeFactory(com.runwaysdk.jstest.TestClass.HOMEPHONE, com.runwaysdk.system.metadata.MdAttributeStruct.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableChar getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.jstest.TestClass.OID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.jstest.TestClass.OID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.jstest.TestClass.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.jstest.TestClass.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.jstest.TestClass.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.jstest.TestClass.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.jstest.TestClass.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(com.runwaysdk.jstest.TestClass.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.get(com.runwaysdk.jstest.TestClass.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.get(com.runwaysdk.jstest.TestClass.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getMultipleState()
  {
    return getMultipleState(null);

  }
 
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getMultipleState(String alias)
  {
    return (com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF)this.get(com.runwaysdk.jstest.TestClass.MULTIPLESTATE, alias, null);

  }
 
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getMultipleState(String alias, String displayLabel)
  {
    return (com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF)this.get(com.runwaysdk.jstest.TestClass.MULTIPLESTATE, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(com.runwaysdk.jstest.TestClass.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(com.runwaysdk.jstest.TestClass.OWNER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(com.runwaysdk.jstest.TestClass.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(com.runwaysdk.jstest.TestClass.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getSingleState()
  {
    return getSingleState(null);

  }
 
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getSingleState(String alias)
  {
    return (com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF)this.get(com.runwaysdk.jstest.TestClass.SINGLESTATE, alias, null);

  }
 
  public com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF getSingleState(String alias, String displayLabel)
  {
    return (com.runwaysdk.jstest.StateEnumQuery.StatesQueryIF)this.get(com.runwaysdk.jstest.TestClass.SINGLESTATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.jstest.TestClass.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.jstest.TestClass.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBlob getTestBlob()
  {
    return getTestBlob(null);

  }
 
  public com.runwaysdk.query.SelectableBlob getTestBlob(String alias)
  {
    return (com.runwaysdk.query.SelectableBlob)this.get(com.runwaysdk.jstest.TestClass.TESTBLOB, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBlob getTestBlob(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBlob)this.get(com.runwaysdk.jstest.TestClass.TESTBLOB, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getTestBoolean()
  {
    return getTestBoolean(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getTestBoolean(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.jstest.TestClass.TESTBOOLEAN, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getTestBoolean(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(com.runwaysdk.jstest.TestClass.TESTBOOLEAN, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getTestCharacter()
  {
    return getTestCharacter(null);

  }
 
  public com.runwaysdk.query.SelectableChar getTestCharacter(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.jstest.TestClass.TESTCHARACTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getTestCharacter(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.jstest.TestClass.TESTCHARACTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getTestDate()
  {
    return getTestDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getTestDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.jstest.TestClass.TESTDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getTestDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.jstest.TestClass.TESTDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getTestDateTime()
  {
    return getTestDateTime(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getTestDateTime(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.jstest.TestClass.TESTDATETIME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getTestDateTime(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.jstest.TestClass.TESTDATETIME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableDecimal getTestDecimal()
  {
    return getTestDecimal(null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getTestDecimal(String alias)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.get(com.runwaysdk.jstest.TestClass.TESTDECIMAL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getTestDecimal(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.get(com.runwaysdk.jstest.TestClass.TESTDECIMAL, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableDouble getTestDouble()
  {
    return getTestDouble(null);

  }
 
  public com.runwaysdk.query.SelectableDouble getTestDouble(String alias)
  {
    return (com.runwaysdk.query.SelectableDouble)this.get(com.runwaysdk.jstest.TestClass.TESTDOUBLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableDouble getTestDouble(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableDouble)this.get(com.runwaysdk.jstest.TestClass.TESTDOUBLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableFloat getTestFloat()
  {
    return getTestFloat(null);

  }
 
  public com.runwaysdk.query.SelectableFloat getTestFloat(String alias)
  {
    return (com.runwaysdk.query.SelectableFloat)this.get(com.runwaysdk.jstest.TestClass.TESTFLOAT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableFloat getTestFloat(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableFloat)this.get(com.runwaysdk.jstest.TestClass.TESTFLOAT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getTestInteger()
  {
    return getTestInteger(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getTestInteger(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.jstest.TestClass.TESTINTEGER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getTestInteger(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(com.runwaysdk.jstest.TestClass.TESTINTEGER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getTestLong()
  {
    return getTestLong(null);

  }
 
  public com.runwaysdk.query.SelectableLong getTestLong(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(com.runwaysdk.jstest.TestClass.TESTLONG, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getTestLong(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(com.runwaysdk.jstest.TestClass.TESTLONG, alias, displayLabel);

  }
  public com.runwaysdk.jstest.RefClassQuery.RefClassQueryReferenceIF getTestReferenceObject()
  {
    return getTestReferenceObject(null);

  }
 
  public com.runwaysdk.jstest.RefClassQuery.RefClassQueryReferenceIF getTestReferenceObject(String alias)
  {
    return (com.runwaysdk.jstest.RefClassQuery.RefClassQueryReferenceIF)this.get(com.runwaysdk.jstest.TestClass.TESTREFERENCEOBJECT, alias, null);

  }
 
  public com.runwaysdk.jstest.RefClassQuery.RefClassQueryReferenceIF getTestReferenceObject(String alias, String displayLabel)
  {
    return (com.runwaysdk.jstest.RefClassQuery.RefClassQueryReferenceIF)this.get(com.runwaysdk.jstest.TestClass.TESTREFERENCEOBJECT,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getTestText()
  {
    return getTestText(null);

  }
 
  public com.runwaysdk.query.SelectableChar getTestText(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.jstest.TestClass.TESTTEXT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getTestText(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.jstest.TestClass.TESTTEXT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getTestTime()
  {
    return getTestTime(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getTestTime(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.jstest.TestClass.TESTTIME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getTestTime(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(com.runwaysdk.jstest.TestClass.TESTTIME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.jstest.TestClass.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(com.runwaysdk.jstest.TestClass.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getWorkPhone()
  {
    return getWorkPhone(null);

  }
 
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getWorkPhone(String alias)
  {
    return (com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF)this.attributeFactory(com.runwaysdk.jstest.TestClass.WORKPHONE, com.runwaysdk.system.metadata.MdAttributeStruct.CLASS, alias, null);

  }
 
  public com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF getWorkPhone(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStructIF)this.attributeFactory(com.runwaysdk.jstest.TestClass.WORKPHONE, com.runwaysdk.system.metadata.MdAttributeStruct.CLASS, alias, displayLabel);

  }

  public com.runwaysdk.query.Condition refClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);

    return this.isParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_refClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition refClass(com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    return this.isParentIn(befriendsQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_refClass(com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    return this.isParentIn_SUBSELECT(befriendsQuery);
  }

  public com.runwaysdk.query.Condition refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(refClassQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(refClassQuery));

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery, com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    befriendsQuery.AND(befriendsQuery.hasChild(refClassQuery));
    return this.isParentIn(befriendsQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery, com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    befriendsQuery.AND(befriendsQuery.hasChild(refClassQuery));
    return this.isParentIn_SUBSELECT(befriendsQuery);
  }


  public com.runwaysdk.query.Condition NOT_IN_refClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }


  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_refClass()
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_refClass(com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    return this.isNotParentIn(befriendsQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_refClass(com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    return this.isNotParentIn_SUBSELECT(befriendsQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(refClassQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery)
  {
    com.runwaysdk.query.QueryFactory queryFactory = this.getQueryFactory();
    com.runwaysdk.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(com.runwaysdk.jstest.Befriends.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(refClassQuery));

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.runwaysdk.query.Condition NOT_IN_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery, com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    befriendsQuery.AND(befriendsQuery.hasChild(refClassQuery));
    return this.isNotParentIn(befriendsQuery);
  }

  public com.runwaysdk.query.Condition SUBSELECT_NOT_IN_refClass(com.runwaysdk.jstest.RefClassQuery refClassQuery, com.runwaysdk.jstest.BefriendsQuery befriendsQuery)
  {
    befriendsQuery.AND(befriendsQuery.hasChild(refClassQuery));
    return this.isNotParentIn_SUBSELECT(befriendsQuery);
  }

  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.jstest.TestClass.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.UsersQuery.UsersQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.TESTREFERENCEOBJECT)) 
    {
       return new com.runwaysdk.jstest.RefClassQuery.RefClassQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeStruct structFactory( com.runwaysdk.dataaccess.MdAttributeStructDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdStructDAOIF mdStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.jstest.TestClass.CELLPHONE)) 
    {
       return new com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStruct((com.runwaysdk.dataaccess.MdAttributeStructDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.HOMEPHONE)) 
    {
       return new com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStruct((com.runwaysdk.dataaccess.MdAttributeStructDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.WORKPHONE)) 
    {
       return new com.runwaysdk.system.PhoneNumberQuery.PhoneNumberQueryStruct((com.runwaysdk.dataaccess.MdAttributeStructDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeEnumeration enumerationFactory( com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(com.runwaysdk.jstest.TestClass.MULTIPLESTATE)) 
    {
       return new com.runwaysdk.jstest.StateEnumQuery.StatesQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(com.runwaysdk.jstest.TestClass.SINGLESTATE)) 
    {
       return new com.runwaysdk.jstest.StateEnumQuery.StatesQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }
}
